{"version":3,"sources":["api/graphQL.ts","api/characters.ts","store/CharsListReducer.ts","api/locations.ts","store/LocationListReducer.ts","api/episodes.ts","store/EpisodeListReducer.ts","store/UserReducer.ts","store/index.ts","components/Loader/Loader.tsx","components/Search/Search.tsx","components/CharPage/CharPage.tsx","functions/URLValidator.ts","components/CharsList/CharsList.tsx","components/EpisodesList/EpisodesList.tsx","components/LocationsList/LocationsList.tsx","components/MyProfilePage/MyProfilePage.tsx","components/Header/Header.tsx","components/RequireAuth/RequireAuth.tsx","components/Footer/Footer.tsx","functions/paginate.ts","components/Pagination/Pagination.tsx","components/CharListPage/CharListPage.tsx","components/HomePage/HomePage.tsx","components/LocationListPage/LocationListPage.tsx","components/LocationPage/LocationPage.tsx","components/EpisodeListPage/EpisodeListPage.tsx","components/EpisodePage/EpisodePage.tsx","App.tsx","index.tsx"],"names":["queryFetch","query","variables","a","fetch","method","headers","body","JSON","stringify","response","json","getCharactersFromServer","page","getFilteredCharactersFromServer","name","getCharacterByIDFromServer","id","loadPageOfCharsFromServer","createAsyncThunk","loadCharByIDFromServer","loadFilteredCharactersFromServer","CharListReducer","createSlice","initialState","chars","currentChar","filteredCharacters","nameQuery","isCharListLoading","isCharPageLoading","nextPage","prevPage","pagesCount","totalChars","reducers","setCurrentChar","state","action","payload","setIsCharListLoading","setIsCharPageLoading","setCurrentCharPhoto","image","setCurrentQuery","extraReducers","builder","addCase","fulfilled","data","characters","results","info","next","prev","pages","count","character","actions","CharsSelectors","getLocationsFromServer","getLocationByIDFromServer","getFilteredLocationsFromServer","loadPageOfLocationsFromServer","loadLocationByIDFromServer","loadFilteredLocationsFromServer","LocationListReducer","locations","currentLocation","filteredLocations","isLocationListLoading","isLocationPageLoading","totalLocations","setCurrentLocation","setIsLocationListLoading","setIsLocationPageLoading","location","LocationSelectors","getEpisodesFromServer","getEpisodeByIDFromServer","getFilteredEpisodesFromServer","loadPageOfEpisodesFromServer","loadEpisodeByIDFromServer","loadFilteredEpisodesFromServer","EpisodeListReducer","episodes","currentEpisode","filteredEpisodes","isEpisodeListLoading","isEpisodePageLoading","totalEpisodes","setCurrentEpisode","setIsEpisodeListLoading","setIsEpisodePageLoading","episode","EpisodeSelectors","UserReducer","user","setUser","setCurrentUserLikedChars","likedChars","localStorage","removeItem","userID","setItem","dislikedChars","setCurrentUserDislikedChars","setCurrentUserLikedLocations","likedLocations","dislikedLocations","setCurrentUserDislikedLocations","setCurrentUserLikedEpisodes","likedEpisodes","dislikedEpisodes","setCurrentUserDislikedEpisodes","UserSelectors","rootReducer","combineReducers","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Loader","memo","size","className","classNames","PossibleLists","CharPage","charID","useParams","navigate","useNavigate","dispatch","useState","isPhotoChangeInputVisible","setIsPhotoChangeInputVisible","isURLValid","setIsURLValid","newPhotoUrl","setNewPhotoUrl","currentCharDate","useMemo","date","Date","created","day","getDate","month","getMonth","year","getFullYear","handleNewImgUpload","useCallback","e","preventDefault","match","useEffect","Number","isNaN","src","alt","type","value","onChange","target","placeholder","onClick","species","gender","to","origin","data-mdb-toggle","aria-expanded","map","status","CharsList","charsArray","char","style","gap","event","stopPropagation","EpisodesList","episodesArray","slice","LocationsList","locationsArray","MyProfilePage","data-mdb-target","aria-controls","aria-labelledby","data-mdb-parent","Object","keys","length","values","Search","filteredChars","userInput","setUserInput","activeSuggestionIndex","setActiveSuggestionIndex","Characters","activeSuggestionList","setActiveSuggestionList","showSuggestions","setShowSuggestions","applyQuery","debounce","newQuery","Promise","all","handleChange","currentInput","currentTarget","handleChoose","Locations","Episodes","handleKeyDown","code","prevValue","includes","onKeyDown","autoComplete","minWidth","index","onMouseEnter","Header","searchParams","URLSearchParams","useLocation","search","responseFacebook","getItem","parse","userObject","picture","url","delete","aria-label","href","height","loading","end","role","appId","autoLoad","scope","fields","callback","icon","textButton","cssClass","authType","RequireAuth","children","replace","Footer","rel","data-mdb-ripple-color","paginate","currentPage","lastPage","delta","result","i","Math","max","min","push","unshift","uuid","Pagination","get","isPrevDisabled","setPrevDisability","isNextDisabled","setNextDisability","lastCharsPage","lastLocationsPage","lastEpisodesPage","visiblePages","pathname","set","toString","disabled","aria-hidden","item","CharListPage","maxPages","isListLoading","HomePage","LocationListPage","LocationPage","locationID","currentLocationDate","dimension","residents","EpisodeListPage","EpisodePage","episodeID","currentEpisodeDate","air_date","App","path","element","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.895c885a.chunk.js","sourcesContent":["export const queryFetch = async (query: string, variables: { [key: string]: string | number }) => {\n  const response = await fetch('https://rickandmortyapi.com/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n  });\n\n  return response.json();\n};\n","import { queryFetch } from './graphQL';\n\nexport const getCharactersFromServer = (page: number) => {\n  return queryFetch(`\n    query getCharactersPage($page: Int) {\n      characters(page: $page) {\n        results {\n          id\n          name\n          status\n          image\n        }\n        info {\n          count\n          pages\n          next\n          prev\n        }\n      }\n    }\n  `, { page });\n};\n\nexport const getFilteredCharactersFromServer = (\n  name: string,\n) => {\n  return queryFetch(`\n  query getFilteredCharacters($name: String) {\n    characters(filter: {\n      name: $name\n    }) {\n      results {\n        name\n        id\n      }\n    }\n  }\n  `, { name });\n};\n\nexport const getCharacterByIDFromServer = (\n  id: number,\n) => {\n  return queryFetch(`\n    query getCharacterByID($id: ID!) {\n      character(id: $id) {\n        name\n        image\n        species\n        gender\n        origin {\n          id\n          name\n        }\n        location {\n          id\n          name\n        }\n        episode {\n          id\n          episode\n          name\n        }\n        status\n        created\n      }\n    }\n  `, { id });\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getCharacterByIDFromServer, getCharactersFromServer, getFilteredCharactersFromServer } from '../api/characters';\nimport { Character } from '../types/Character';\n\ninterface CharListState {\n  chars: Character[],\n  currentChar: Character | null,\n  filteredCharacters: Character[],\n  nameQuery: string,\n  isCharListLoading: boolean,\n  isCharPageLoading: boolean,\n  nextPage: string | null,\n  prevPage: string | null,\n  pagesCount: number,\n  totalChars: number,\n}\n\nconst initialState: CharListState = {\n  chars: [],\n  currentChar: null,\n  filteredCharacters: [],\n  nameQuery: '',\n  isCharListLoading: false,\n  isCharPageLoading: false,\n  nextPage: null,\n  prevPage: null,\n  pagesCount: 1,\n  totalChars: 0,\n};\n\nexport const loadPageOfCharsFromServer = createAsyncThunk(\n  'CharList/loadPageOfChars',\n  async (page: number) => {\n    try {\n      const response = await getCharactersFromServer(page);\n\n      return response;\n    } catch {\n      return 'Error';\n    }\n  },\n);\n\nexport const loadCharByIDFromServer = createAsyncThunk(\n  'CharList/loadCharPageByID',\n  async (id: number) => {\n    const response = await getCharacterByIDFromServer(id);\n\n    return response;\n  },\n);\n\nexport const loadFilteredCharactersFromServer = createAsyncThunk(\n  'CharList/loadFilteredCharacters',\n  async (name: string) => {\n    const response = await getFilteredCharactersFromServer(name);\n\n    return response;\n  },\n);\n\nconst CharListReducer = createSlice({\n  name: 'CharListReducer',\n  initialState,\n  reducers: {\n    setCurrentChar: (state, action: PayloadAction<Character | null>) => {\n      state.currentChar = action.payload;\n    },\n    setIsCharListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isCharListLoading = action.payload;\n    },\n    setIsCharPageLoading: (state, action: PayloadAction<boolean>) => {\n      state.isCharPageLoading = action.payload;\n    },\n    setCurrentCharPhoto: (state, action: PayloadAction<string>) => {\n      if (state.currentChar) {\n        state.currentChar.image = action.payload;\n      }\n    },\n    setCurrentQuery: (state, action: PayloadAction<string>) => {\n      state.nameQuery = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadPageOfCharsFromServer.fulfilled, (state, action) => {\n      if (action.payload === 'Error') {\n        state.chars = [];\n        state.nextPage = null;\n        state.prevPage = null;\n        state.pagesCount = 1;\n        state.totalChars = 0;\n        state.isCharListLoading = false;\n\n        return;\n      }\n\n      state.chars = action.payload.data.characters.results;\n      state.nextPage = action.payload.data.characters.info.next;\n      state.prevPage = action.payload.data.characters.info.prev;\n      state.pagesCount = action.payload.data.characters.info.pages;\n      state.totalChars = action.payload.data.characters.info.count;\n      state.isCharListLoading = false;\n    });\n    builder.addCase(loadCharByIDFromServer.fulfilled, (state, action) => {\n      state.currentChar = action.payload.data.character;\n      state.isCharPageLoading = false;\n    });\n    builder.addCase(loadFilteredCharactersFromServer.fulfilled, (state, action) => {\n      if (action.payload.data.characters.results) {\n        state.filteredCharacters = action.payload.data.characters.results;\n      } else {\n        state.filteredCharacters = [];\n      }\n    });\n  },\n});\n\nexport const {\n  setIsCharListLoading,\n  setIsCharPageLoading,\n  setCurrentChar,\n  setCurrentCharPhoto,\n  setCurrentQuery,\n} = CharListReducer.actions;\n\nexport default CharListReducer.reducer;\n\nexport const CharsSelectors = {\n  getChars: (state: RootState) => {\n    return state.CharListReducer.chars;\n  },\n  getFilteredCharacters: (state: RootState) => {\n    return state.CharListReducer.filteredCharacters;\n  },\n  getCurrentChar: (state: RootState) => {\n    return state.CharListReducer.currentChar;\n  },\n  getIsCharListLoading: (state: RootState) => {\n    return state.CharListReducer.isCharListLoading;\n  },\n  getIsCharPageLoading: (state: RootState) => {\n    return state.CharListReducer.isCharPageLoading;\n  },\n  getNextPage: (state: RootState) => {\n    return state.CharListReducer.nextPage;\n  },\n  getPrevPage: (state: RootState) => {\n    return state.CharListReducer.prevPage;\n  },\n  getTotalChars: (state: RootState) => {\n    return state.CharListReducer.totalChars;\n  },\n  getCharsPagesCount: (state: RootState) => {\n    return state.CharListReducer.pagesCount;\n  },\n  getNameQuery: (state: RootState) => {\n    return state.CharListReducer.nameQuery;\n  },\n};\n","import { queryFetch } from './graphQL';\n\nexport const getLocationsFromServer = async (page: number) => {\n  return queryFetch(`\n    query getLocations($page: Int) {\n      locations(page: $page) {\n        info {\n          count\n          pages\n          next\n          prev\n        }\n        results {\n          id\n          name\n          type\n          dimension\n        }\n      }\n    }\n  `, { page });\n};\n\nexport const getLocationByIDFromServer = (id: number) => {\n  return queryFetch(`\n    query getLocationByID($id: ID!) {\n      location(id: $id) {\n        id\n        name\n        type\n        dimension\n        residents {\n          id\n          name\n          image\n        }\n        created\n      }\n    }\n  `, { id });\n};\n\nexport const getFilteredLocationsFromServer = (\n  name: string,\n) => {\n  return queryFetch(`\n    query getFilteredLocations($name: String) {\n      locations(filter: {\n        name: $name\n      }) {\n        results {\n          name\n          id\n        }\n      }\n    }\n  `, { name });\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getFilteredLocationsFromServer, getLocationByIDFromServer, getLocationsFromServer } from '../api/locations';\nimport { Location } from '../types/Location';\n\ntype LocationListReducerState = {\n  locations: Location[],\n  currentLocation: Location | null,\n  filteredLocations: Location[],\n  isLocationListLoading: boolean,\n  isLocationPageLoading: boolean,\n  nextPage: string | null,\n  prevPage: string | null,\n  pagesCount: number,\n  totalLocations: number,\n};\n\nconst initialState: LocationListReducerState = {\n  locations: [],\n  currentLocation: null,\n  filteredLocations: [],\n  isLocationListLoading: false,\n  isLocationPageLoading: false,\n  nextPage: null,\n  prevPage: null,\n  pagesCount: 1,\n  totalLocations: 0,\n};\n\nexport const loadPageOfLocationsFromServer = createAsyncThunk(\n  'LocationList/loadPageOfLocations',\n  async (page: number) => {\n    const response = await getLocationsFromServer(page);\n\n    return response;\n  },\n);\n\nexport const loadLocationByIDFromServer = createAsyncThunk(\n  'LocationList/loadLocationByID',\n  async (id: number) => {\n    const response = await getLocationByIDFromServer(id);\n\n    return response;\n  },\n);\n\nexport const loadFilteredLocationsFromServer = createAsyncThunk(\n  'LocationList/loadFilteredLocations',\n  async (name: string) => {\n    const response = await getFilteredLocationsFromServer(name);\n\n    return response;\n  },\n);\n\nconst LocationListReducer = createSlice({\n  name: 'LocationListReducer',\n  initialState,\n  reducers: {\n    setCurrentLocation: (state, action: PayloadAction<Location | null>) => {\n      state.currentLocation = action.payload;\n    },\n    setIsLocationListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLocationListLoading = action.payload;\n    },\n    setIsLocationPageLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLocationPageLoading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadPageOfLocationsFromServer.fulfilled, (state, action) => {\n      state.locations = action.payload.data.locations.results;\n      state.nextPage = action.payload.data.locations.info.next;\n      state.prevPage = action.payload.data.locations.info.prev;\n      state.pagesCount = action.payload.data.locations.info.pages;\n      state.totalLocations = action.payload.data.locations.info.count;\n      state.isLocationListLoading = false;\n    });\n    builder.addCase(loadLocationByIDFromServer.fulfilled, (state, action) => {\n      state.currentLocation = action.payload.data.location;\n      state.isLocationPageLoading = false;\n    });\n    builder.addCase(loadFilteredLocationsFromServer.fulfilled, (state, action) => {\n      if (action.payload.data.locations.results) {\n        state.filteredLocations = action.payload.data.locations.results;\n      } else {\n        state.filteredLocations = [];\n      }\n    });\n  },\n});\n\nexport const {\n  setCurrentLocation,\n  setIsLocationListLoading,\n  setIsLocationPageLoading,\n} = LocationListReducer.actions;\n\nexport const LocationSelectors = {\n  getLocations: (state: RootState) => {\n    return state.LocationListReducer.locations;\n  },\n  getFilteredLocations: (state: RootState) => {\n    return state.LocationListReducer.filteredLocations;\n  },\n  getCurrentLocation: (state: RootState) => {\n    return state.LocationListReducer.currentLocation;\n  },\n  getIsLocationListLoading: (state: RootState) => {\n    return state.LocationListReducer.isLocationListLoading;\n  },\n  getIsLocationPageLoading: (state: RootState) => {\n    return state.LocationListReducer.isLocationPageLoading;\n  },\n  getNextPage: (state: RootState) => {\n    return state.LocationListReducer.nextPage;\n  },\n  getPrevPage: (state: RootState) => {\n    return state.LocationListReducer.prevPage;\n  },\n  getTotalLocations: (state: RootState) => {\n    return state.LocationListReducer.totalLocations;\n  },\n  getLocationsPagesCount: (state: RootState) => {\n    return state.LocationListReducer.pagesCount;\n  },\n};\n\nexport default LocationListReducer.reducer;\n","import { queryFetch } from './graphQL';\n\nexport const getEpisodesFromServer = async (page: number) => {\n  return queryFetch(`\n    query getEpisodes($page: Int) {\n      episodes(page: $page) {\n        info {\n          count\n          pages\n          next\n          prev\n        }\n        results {\n          id\n          name\n          episode\n        }\n      }\n    }\n  `, { page });\n};\n\nexport const getEpisodeByIDFromServer = async (id: number) => {\n  return queryFetch(`\n    query getEpisodeByID($id: ID!) {\n      episode(id: $id) {\n        id\n        name\n        air_date\n        episode\n        characters {\n          id\n          name\n          image\n        }\n        created\n      }\n    }\n  `, { id });\n};\n\nexport const getFilteredEpisodesFromServer = async (name: string) => {\n  return queryFetch(`\n    query getFilteredEpisodes($name: String) {\n      episodes(filter: {\n        name: $name\n      }) {\n        results {\n          id\n          name\n          episode\n        }\n      }\n    }\n  `, { name });\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\n\nimport { getEpisodeByIDFromServer, getEpisodesFromServer, getFilteredEpisodesFromServer } from '../api/episodes';\n\nimport { Episode } from '../types/Episode';\n\ntype EpisodeListState = {\n  episodes: Episode[],\n  currentEpisode: Episode | null,\n  filteredEpisodes: Episode[],\n  isEpisodeListLoading: boolean,\n  isEpisodePageLoading: boolean,\n  nextPage: string | null,\n  prevPage: string | null,\n  pagesCount: number,\n  totalEpisodes: number,\n};\n\nconst initialState: EpisodeListState = {\n  episodes: [],\n  currentEpisode: null,\n  filteredEpisodes: [],\n  isEpisodeListLoading: false,\n  isEpisodePageLoading: false,\n  nextPage: null,\n  prevPage: null,\n  pagesCount: 1,\n  totalEpisodes: 0,\n};\n\nexport const loadPageOfEpisodesFromServer = createAsyncThunk(\n  'EpisodeList/loadPageOfEpisodes',\n  async (page: number) => {\n    const response = await getEpisodesFromServer(page);\n\n    return response;\n  },\n);\n\nexport const loadEpisodeByIDFromServer = createAsyncThunk(\n  'EpisodeList/loadEpisodeByID',\n  async (id: number) => {\n    const response = await getEpisodeByIDFromServer(id);\n\n    return response;\n  },\n);\n\nexport const loadFilteredEpisodesFromServer = createAsyncThunk(\n  'LocationList/loadFilteredEpisodes',\n  async (name: string) => {\n    const response = await getFilteredEpisodesFromServer(name);\n\n    return response;\n  },\n);\n\nconst EpisodeListReducer = createSlice({\n  name: 'EpisodeListReducer',\n  initialState,\n  reducers: {\n    setCurrentEpisode: (state, action: PayloadAction<Episode| null>) => {\n      state.currentEpisode = action.payload;\n    },\n    setIsEpisodeListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isEpisodeListLoading = action.payload;\n    },\n    setIsEpisodePageLoading: (state, action: PayloadAction<boolean>) => {\n      state.isEpisodeListLoading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadPageOfEpisodesFromServer.fulfilled, (state, action) => {\n      state.episodes = action.payload.data.episodes.results;\n      state.nextPage = action.payload.data.episodes.info.next;\n      state.prevPage = action.payload.data.episodes.info.prev;\n      state.pagesCount = action.payload.data.episodes.info.pages;\n      state.totalEpisodes = action.payload.data.episodes.info.count;\n      state.isEpisodeListLoading = false;\n    });\n    builder.addCase(loadEpisodeByIDFromServer.fulfilled, (state, action) => {\n      state.currentEpisode = action.payload.data.episode;\n      state.isEpisodePageLoading = false;\n    });\n    builder.addCase(loadFilteredEpisodesFromServer.fulfilled, (state, action) => {\n      if (action.payload.data.episodes.results) {\n        state.filteredEpisodes = action.payload.data.episodes.results;\n      } else {\n        state.filteredEpisodes = [];\n      }\n    });\n  },\n});\n\nexport const {\n  setCurrentEpisode,\n  setIsEpisodeListLoading,\n  setIsEpisodePageLoading,\n} = EpisodeListReducer.actions;\n\nexport const EpisodeSelectors = {\n  getEpisodes: (state: RootState) => {\n    return state.EpisodeListReducer.episodes;\n  },\n  getFilteredEpisodes: (state: RootState) => {\n    return state.EpisodeListReducer.filteredEpisodes;\n  },\n  getCurrentEpisode: (state: RootState) => {\n    return state.EpisodeListReducer.currentEpisode;\n  },\n  getIsEpisodeListLoading: (state: RootState) => {\n    return state.EpisodeListReducer.isEpisodeListLoading;\n  },\n  getIsEpisodePageLoading: (state: RootState) => {\n    return state.EpisodeListReducer.isEpisodePageLoading;\n  },\n  getNextPage: (state: RootState) => {\n    return state.EpisodeListReducer.nextPage;\n  },\n  getPrevPage: (state: RootState) => {\n    return state.EpisodeListReducer.prevPage;\n  },\n  getTotalEpisodes: (state: RootState) => {\n    return state.EpisodeListReducer.totalEpisodes;\n  },\n  getEpisodesPageCount: (state: RootState) => {\n    return state.EpisodeListReducer.pagesCount;\n  },\n};\n\nexport default EpisodeListReducer.reducer;\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { Character } from '../types/Character';\nimport { Episode } from '../types/Episode';\nimport { Location } from '../types/Location';\nimport { User } from '../types/User';\n\ntype UserReducerState = {\n  user: User | null,\n};\n\nconst initialState: UserReducerState = {\n  user: null,\n};\n\nconst UserReducer = createSlice({\n  name: 'UserReducer',\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<User | null>) => {\n      state.user = action.payload;\n    },\n    setCurrentUserLikedChars: (state, action: PayloadAction<Character>) => {\n      if (state.user) {\n        if (state.user.likedChars[action.payload.id]) {\n          delete state.user.likedChars[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.likedChars[action.payload.id] = action.payload;\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user.dislikedChars[action.payload.id]) {\n          delete state.user.dislikedChars[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserDislikedChars: (state, action: PayloadAction<Character>) => {\n      if (state.user) {\n        if (state.user.dislikedChars[action.payload.id]) {\n          delete state.user.dislikedChars[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.dislikedChars[action.payload.id] = action.payload;\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user.likedChars[action.payload.id]) {\n          delete state.user.likedChars[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserLikedLocations: (state, action: PayloadAction<Location>) => {\n      if (state.user) {\n        if (state.user.likedLocations[action.payload.id]) {\n          delete state.user.likedLocations[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.likedLocations[action.payload.id] = action.payload;\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user.dislikedLocations[action.payload.id]) {\n          delete state.user.dislikedLocations[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserDislikedLocations: (state, action: PayloadAction<Location>) => {\n      if (state.user) {\n        if (state.user.dislikedLocations[action.payload.id]) {\n          delete state.user.dislikedLocations[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.dislikedLocations[action.payload.id] = action.payload;\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user.likedLocations[action.payload.id]) {\n          delete state.user.likedLocations[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserLikedEpisodes: (state, action: PayloadAction<Episode>) => {\n      if (state.user) {\n        if (state.user.likedEpisodes[action.payload.id]) {\n          delete state.user.likedEpisodes[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.likedEpisodes[action.payload.id] = action.payload;\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user.dislikedEpisodes[action.payload.id]) {\n          delete state.user.dislikedEpisodes[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserDislikedEpisodes: (state, action: PayloadAction<Episode>) => {\n      if (state.user) {\n        if (state.user.dislikedEpisodes[action.payload.id]) {\n          delete state.user.dislikedEpisodes[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.dislikedEpisodes[action.payload.id] = action.payload;\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user.likedEpisodes[action.payload.id]) {\n          delete state.user.likedEpisodes[action.payload.id];\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n  },\n});\n\nexport const {\n  setUser,\n  setCurrentUserLikedChars,\n  setCurrentUserDislikedChars,\n  setCurrentUserLikedLocations,\n  setCurrentUserDislikedLocations,\n  setCurrentUserLikedEpisodes,\n  setCurrentUserDislikedEpisodes,\n} = UserReducer.actions;\n\nexport const UserSelectors = {\n  getUser: (state: RootState) => {\n    return state.UserReducer.user;\n  },\n  getLikedChars: (state: RootState) => {\n    return state.UserReducer.user?.likedChars || {};\n  },\n  getDislikedChars: (state: RootState) => {\n    return state.UserReducer.user?.dislikedChars || {};\n  },\n  getLikedLocations: (state: RootState) => {\n    return state.UserReducer.user?.likedLocations || {};\n  },\n  getDislikedLocations: (state: RootState) => {\n    return state.UserReducer.user?.dislikedLocations || {};\n  },\n  getLikedEpisodes: (state: RootState) => {\n    return state.UserReducer.user?.likedEpisodes || {};\n  },\n  getDislikedEpisodes: (state: RootState) => {\n    return state.UserReducer.user?.dislikedEpisodes || {};\n  },\n};\n\nexport default UserReducer.reducer;\n","/* eslint-disable import/no-cycle */\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport CharListReducer from './CharsListReducer';\nimport LocationListReducer from './LocationListReducer';\nimport EpisodeListReducer from './EpisodeListReducer';\nimport UserReducer from './UserReducer';\n\nconst rootReducer = combineReducers({\n  CharListReducer,\n  LocationListReducer,\n  EpisodeListReducer,\n  UserReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nimport './Loader.scss';\n\ntype Props = {\n  size: 'small' | 'big';\n};\n\nexport const Loader: React.FC<Props> = memo(({\n  size,\n}) => (\n  <div className=\"Loader\">\n    <div className={classNames(\n      'Loader__content',\n      { 'Loader__content--small': size === 'small' },\n      { 'Loader__content--big': size === 'big' },\n    )}\n    />\n  </div>\n));\n","/* eslint-disable no-shadow */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, {\n  memo,\n  useCallback,\n  useState,\n  useEffect,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  loadFilteredCharactersFromServer,\n  CharsSelectors,\n  setCurrentQuery,\n} from '../../store/CharsListReducer';\n\nimport './Search.scss';\nimport { loadFilteredLocationsFromServer, LocationSelectors } from '../../store/LocationListReducer';\nimport { EpisodeSelectors, loadFilteredEpisodesFromServer } from '../../store/EpisodeListReducer';\n\nenum PossibleLists {\n  Characters = 'characters',\n  Locations = 'locations',\n  Episodes = 'episodes',\n}\n\nexport const Search: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const nameQuery = useAppSelector(CharsSelectors.getNameQuery);\n\n  const filteredChars = useAppSelector(CharsSelectors.getFilteredCharacters);\n  const filteredLocations = useAppSelector(LocationSelectors.getFilteredLocations);\n  const filteredEpisodes = useAppSelector(EpisodeSelectors.getFilteredEpisodes);\n\n  const [userInput, setUserInput] = useState(nameQuery);\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n  const [\n    activeSuggestionList,\n    setActiveSuggestionList,\n  ] = useState<PossibleLists>(PossibleLists.Characters);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      Promise.all([\n        dispatch(loadFilteredCharactersFromServer(newQuery)),\n        dispatch(loadFilteredLocationsFromServer(newQuery)),\n        dispatch(loadFilteredEpisodesFromServer(newQuery)),\n      ]);\n      dispatch(setCurrentQuery(newQuery));\n    }, 500),\n    [nameQuery],\n  );\n\n  const handleChange = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const currentInput = e.currentTarget.value;\n\n    setUserInput(currentInput);\n    applyQuery(currentInput);\n    setActiveSuggestionIndex(0);\n    setShowSuggestions(true);\n  }, [nameQuery, activeSuggestionIndex, activeSuggestionList]);\n\n  const handleChoose = useCallback(\n    () => {\n      setUserInput(filteredChars[activeSuggestionIndex].name);\n      setShowSuggestions(false);\n      setActiveSuggestionIndex(0);\n\n      switch (activeSuggestionList) {\n        case PossibleLists.Characters:\n          navigate(`/${activeSuggestionList}/${filteredChars[activeSuggestionIndex].id}`);\n          break;\n\n        case PossibleLists.Locations:\n          navigate(`/${activeSuggestionList}/${filteredLocations[activeSuggestionIndex].id}`);\n          break;\n\n        case PossibleLists.Episodes:\n          navigate(`/${activeSuggestionList}/${filteredEpisodes[activeSuggestionIndex].id}`);\n          break;\n\n        default:\n      }\n    },\n    [\n      filteredChars,\n      filteredLocations,\n      filteredEpisodes,\n      activeSuggestionIndex,\n      activeSuggestionList,\n      nameQuery,\n    ],\n  );\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.code === 'Enter') {\n      e.preventDefault();\n\n      if (!filteredChars.length) {\n        return;\n      }\n\n      handleChoose();\n    }\n\n    if (e.code === 'Tab') {\n      e.preventDefault();\n\n      if (!filteredChars.length) {\n        return;\n      }\n\n      setUserInput(filteredChars[activeSuggestionIndex].name);\n      setActiveSuggestionIndex(0);\n      setShowSuggestions(false);\n    }\n\n    if (e.code === 'ArrowUp') {\n      e.preventDefault();\n\n      if (activeSuggestionIndex === 0) {\n        if (activeSuggestionList === PossibleLists.Characters) {\n          return;\n        }\n\n        if (activeSuggestionList === PossibleLists.Locations) {\n          setActiveSuggestionIndex(filteredChars.length - 1);\n          setActiveSuggestionList(PossibleLists.Characters);\n\n          return;\n        }\n\n        if (activeSuggestionList === PossibleLists.Episodes) {\n          setActiveSuggestionIndex(filteredLocations.length - 1);\n          setActiveSuggestionList(PossibleLists.Locations);\n\n          return;\n        }\n      }\n\n      setActiveSuggestionIndex((prevValue) => prevValue - 1);\n    }\n\n    if (e.code === 'ArrowDown') {\n      e.preventDefault();\n\n      if ([\n        filteredChars.length,\n        filteredLocations.length,\n        filteredEpisodes.length,\n      ].includes(activeSuggestionIndex + 1)) {\n        if (activeSuggestionList === PossibleLists.Characters) {\n          setActiveSuggestionIndex(0);\n          setActiveSuggestionList(PossibleLists.Locations);\n\n          return;\n        }\n\n        if (activeSuggestionList === PossibleLists.Locations) {\n          setActiveSuggestionIndex(0);\n          setActiveSuggestionList(PossibleLists.Episodes);\n\n          return;\n        }\n\n        if (activeSuggestionList === PossibleLists.Episodes) {\n          return;\n        }\n      }\n\n      setActiveSuggestionIndex((prevValue) => prevValue + 1);\n    }\n  }, [activeSuggestionIndex, activeSuggestionList, filteredChars, nameQuery]);\n\n  useEffect(() => {\n    if (filteredChars.length !== 0) {\n      setActiveSuggestionList(PossibleLists.Characters);\n\n      return;\n    }\n\n    if (filteredLocations.length !== 0) {\n      setActiveSuggestionList(PossibleLists.Locations);\n    }\n  }, [filteredChars, filteredLocations]);\n\n  return (\n    <form\n      className=\"input-group w-auto my-auto d-sm-flex\"\n    >\n      <input\n        type=\"text\"\n        value={userInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        autoComplete=\"off\"\n        className=\"form-control rounded\"\n        placeholder=\"Search\"\n        style={{ minWidth: '125px' }}\n      />\n      {showSuggestions && userInput && (\n        <ul\n          className=\"bg-light my-dropdown suggestionsList\"\n        >\n          {filteredChars.length !== 0 && (\n            <>\n              <span\n                className=\"bg-light border-bottom p-1 border-dark suggestionsList__category\"\n              >\n                Characters :\n              </span>\n              {filteredChars.map((char, index) => (\n                <li\n                  key={char.id}\n                  onClick={handleChoose}\n                  onMouseEnter={() => {\n                    setActiveSuggestionList(PossibleLists.Characters);\n                    setActiveSuggestionIndex(index);\n                  }}\n                  className={classNames(\n                    'suggestionsList__item border-0',\n                    { 'bg-success': index === activeSuggestionIndex && activeSuggestionList === PossibleLists.Characters },\n                  )}\n                >\n                  {char.name}\n                </li>\n              ))}\n            </>\n          )}\n\n          {filteredLocations.length !== 0 && (\n            <>\n              <span\n                className=\"bg-light border-bottom p-1 border-dark suggestionsList__category\"\n              >\n                Locations :\n              </span>\n              {filteredLocations.map((location, index) => (\n                <li\n                  key={location.id}\n                  onClick={handleChoose}\n                  onMouseEnter={() => {\n                    setActiveSuggestionList(PossibleLists.Locations);\n                    setActiveSuggestionIndex(index);\n                  }}\n                  className={classNames(\n                    'suggestionsList__item border-0',\n                    { 'bg-success': index === activeSuggestionIndex && activeSuggestionList === PossibleLists.Locations },\n                  )}\n                >\n                  {location.name}\n                </li>\n              ))}\n            </>\n          )}\n\n          {filteredEpisodes.length !== 0 && (\n            <>\n              <span\n                className=\"bg-light border-bottom p-1 border-dark suggestionsList__category\"\n              >\n                Episodes :\n              </span>\n              {filteredEpisodes.map((episode, index) => (\n                <li\n                  key={episode.id}\n                  onClick={handleChoose}\n                  onMouseEnter={() => {\n                    setActiveSuggestionList(PossibleLists.Episodes);\n                    setActiveSuggestionIndex(index);\n                  }}\n                  className={classNames(\n                    'suggestionsList__item border-0',\n                    { 'bg-success': index === activeSuggestionIndex && activeSuggestionList === PossibleLists.Episodes },\n                  )}\n                >\n                  {episode.name}\n                </li>\n              ))}\n            </>\n          )}\n        </ul>\n      )}\n      <button\n        type=\"button\"\n        onClick={handleChoose}\n        className=\"input-group-text border-0 d-flex\"\n        onKeyDown={(e) => {\n          if (e.code === 'Enter') {\n            e.preventDefault();\n\n            setUserInput('');\n            setActiveSuggestionIndex(0);\n            setShowSuggestions(false);\n\n            if (!filteredChars.length) {\n              return;\n            }\n\n            navigate(`/${PossibleLists.Characters}/${filteredChars[activeSuggestionIndex].id}`);\n          }\n        }}\n      >\n        <i className=\"fas fa-search myLink\"></i>\n      </button>\n    </form>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  Link,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  loadCharByIDFromServer,\n  CharsSelectors,\n  setCurrentCharPhoto,\n  setIsCharPageLoading,\n} from '../../store/CharsListReducer';\n\nimport { Loader } from '../Loader';\nimport { urlValidator } from '../../functions/URLValidator';\n\nimport './CharPage.scss';\nimport { UserSelectors } from '../../store/UserReducer';\n\nexport const CharPage: React.FC = memo(() => {\n  const { charID } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n\n  const [isPhotoChangeInputVisible, setIsPhotoChangeInputVisible] = useState(false);\n  const [isURLValid, setIsURLValid] = useState(true);\n  const [newPhotoUrl, setNewPhotoUrl] = useState('');\n\n  const currentChar = useAppSelector(CharsSelectors.getCurrentChar);\n  const isCharPageLoading = useAppSelector(CharsSelectors.getIsCharPageLoading);\n  const user = useAppSelector(UserSelectors.getUser);\n  const totalChars = useAppSelector(CharsSelectors.getTotalChars);\n\n  const currentCharDate = useMemo(() => {\n    if (currentChar) {\n      const date = new Date(currentChar.created);\n\n      return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n      };\n    }\n\n    return null;\n  }, [currentChar]);\n\n  const handleNewImgUpload = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!urlValidator(newPhotoUrl)) {\n      setIsURLValid(false);\n\n      return;\n    }\n\n    setIsURLValid(true);\n    setIsPhotoChangeInputVisible(false);\n    setNewPhotoUrl('');\n    dispatch(setCurrentCharPhoto(newPhotoUrl));\n  }, [newPhotoUrl]);\n\n  useEffect(() => {\n    if (charID) {\n      dispatch(setIsCharPageLoading(true));\n\n      if (totalChars !== 0\n        && (+charID > totalChars || +charID < 0 || Number.isNaN(+charID))) {\n        navigate('/characters');\n\n        return;\n      }\n\n      dispatch(loadCharByIDFromServer(+charID));\n    }\n  }, [charID, totalChars]);\n\n  return (\n    <div className=\"container charPage-container bg-dark\">\n      {isCharPageLoading && <Loader size=\"big\" />}\n\n      {currentChar && (\n        <div className=\"d-flex flex-column\">\n          <div>\n            <h2 className=\"display-3 text-light mb-5 border-bottom border-success\">\n              {currentChar.name}\n            </h2>\n          </div>\n\n          <div className=\"d-flex flex-column flex-md-row\">\n            <div className=\"me-3\">\n              <img\n                src={currentChar.image}\n                alt={`${currentChar.name} poster`}\n                className=\"img-thumbnail char-image\"\n              />\n\n              {user && (\n                <div>\n                  {isPhotoChangeInputVisible ? (\n                    <div className=\"d-flex flex-column\">\n                      <input\n                        type=\"text\"\n                        value={newPhotoUrl}\n                        onChange={({ target }) => {\n                          setNewPhotoUrl(target.value);\n                          setIsURLValid(true);\n                        }}\n                        placeholder=\"Image URL...\"\n                        className=\"form-control mb-1\"\n                      />\n\n                      {!isURLValid && (\n                        <p className=\"form-helper text-danger\">*Invalid url</p>\n                      )}\n\n                      <button\n                        type=\"submit\"\n                        onClick={handleNewImgUpload}\n                        className=\"text-light btn btn-success mb-1\"\n                      >\n                        Apply Change\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          setIsPhotoChangeInputVisible(false);\n                        }}\n                        className=\"text-light btn btn-danger\"\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  ) : (\n                    <i\n                      className=\"fas fa-camera-retro fa-2x text-success clickable\"\n                      onClick={() => setIsPhotoChangeInputVisible(true)}\n                    >\n                    </i>\n                  )}\n                </div>\n              )}\n            </div>\n\n            <div className=\"d-flex flex-column info\">\n              <h3 className=\"text-light\">\n                {currentChar.species}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {currentChar.gender}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {'Last known location: '}\n                {currentChar.location.name !== 'unknown'\n                  ? (\n                    <Link\n                      to={`/locations/${currentChar.location.id}`}\n                      className=\"text-success\"\n                    >\n                      {currentChar.location.name}\n                    </Link>\n                  )\n                  : (\n                    <span className=\"text-warning\">\n                      {currentChar.location.name}\n                    </span>\n                  )}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {'Origin location: '}\n                {currentChar.origin.name !== 'unknown'\n                  ? (\n                    <Link\n                      to={`/locations/${currentChar.origin.id}`}\n                      className=\"text-success\"\n                    >\n                      {currentChar.origin.name}\n                    </Link>\n                  )\n                  : (\n                    <span className=\"text-warning\">\n                      {currentChar.origin.name}\n                    </span>\n                  )}\n              </h3>\n\n              <button\n                className=\"btn btn-light dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-mdb-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Episodes\n              </button>\n              <ul\n                className=\"dropdown-menu my-dropdown\"\n              >\n                {currentChar.episode.map(episode => (\n                  <li\n                    key={episode.id}\n                    className=\"dropdown-item\"\n                    onClick={() => {\n                      navigate(`/episodes/${episode.id}`);\n                    }}\n                  >\n                    <b className=\"text-success\">\n                      {`${episode.episode}: `}\n                    </b>\n                    {episode.name}\n                  </li>\n                ))}\n              </ul>\n\n              <h3 className=\"text-light\">\n                {'Status: '}\n                <span\n                  className={classNames(\n                    { 'text-success': currentChar.status === 'Alive' },\n                    { 'text-danger': currentChar.status === 'Dead' },\n                    { 'text-warning': currentChar.status === 'unknown' },\n                  )}\n                >\n                  {currentChar.status}\n                </span>\n              </h3>\n\n              <h3 className=\"text-light\">\n                {`Created date: ${currentCharDate?.day}.${currentCharDate?.month}.${currentCharDate?.year}`}\n              </h3>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","export function urlValidator(str: string) {\n  const validUrlRegex = /^https?:\\/\\/.*\\/.*\\.(png|gif|webp|jpeg|jpg)\\??.*$/gmi;\n\n  return str.match(validUrlRegex);\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nimport {\n  setCurrentChar,\n} from '../../store/CharsListReducer';\n\nimport {\n  UserSelectors,\n  setCurrentUserDislikedChars,\n  setCurrentUserLikedChars,\n} from '../../store/UserReducer';\n\nimport './CharsList.scss';\nimport { Character } from '../../types/Character';\n\ntype Props = {\n  charsArray: Character[];\n};\n\nexport const CharsList: React.FC<Props> = memo(({ charsArray }) => {\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const likedChars = useAppSelector(UserSelectors.getLikedChars);\n  const dislikedChars = useAppSelector(UserSelectors.getDislikedChars);\n  const user = useAppSelector(UserSelectors.getUser);\n\n  return (\n    <ul className=\"list-group list-group-light\">\n      {charsArray.map(char => (\n        <li\n          key={char.id}\n          className=\"\n                myLink\n                clickable\n                bg-dark\n                char\n                list-group-item\n                d-flex\n                flex-lg-row\n                flex-column\n                justify-space-between\n                align-items-start\n                align-items-lg-center\n                border-success\"\n          onClick={() => {\n            dispatch(setCurrentChar(null));\n            navigate(`/characters/${char.id}`);\n          }}\n        >\n          <div\n            className=\"ms-2 me-2 mb-2 mb-md-0 d-flex justify-content-center align-items-center\"\n            style={{ gap: '20px' }}\n          >\n            <img\n              src={char.image}\n              alt={`${char.name} poster`}\n              className=\"img-fluid rounded shadow-3 char__image\"\n            />\n\n            <h3 className=\"fw-bold\">\n              {char.name}\n            </h3>\n\n            <p\n              className={classNames(\n                'badge rounded-pill badge-light',\n                { 'text-success': char.status === 'Alive' },\n                { 'text-danger': char.status === 'Dead' },\n                { 'text-warning': char.status === 'unknown' },\n              )}\n            >\n              {char.status}\n            </p>\n          </div>\n\n          {user && (\n            <div className=\"\n                  btn-group\n                  me-2\n                  ms-2\n                  mt-2\n                  mt-lg-0\n                  d-flex\n                  justify-content-end\n                  align-items-center\"\n            >\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  dispatch(setCurrentUserLikedChars(char));\n                }}\n                className={classNames(\n                  'btn btn-light btn-floating',\n                  {\n                    'bg-success': likedChars[char.id],\n                  },\n                )}\n              >\n                <i className=\"fas fa-thumbs-up\"></i>\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  dispatch(setCurrentUserDislikedChars(char));\n                }}\n                className={classNames(\n                  'btn btn-light btn-floating',\n                  {\n                    'bg-danger': dislikedChars[char.id],\n                  },\n                )}\n              >\n                <i className=\"fas fa-thumbs-down\"></i>\n              </button>\n            </div>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-restricted-globals */\nimport classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { setCurrentEpisode } from '../../store/EpisodeListReducer';\nimport { setCurrentUserDislikedEpisodes, setCurrentUserLikedEpisodes, UserSelectors } from '../../store/UserReducer';\nimport { Episode } from '../../types/Episode';\n\ntype Props = {\n  episodesArray: Episode[],\n};\n\nexport const EpisodesList: React.FC<Props> = memo(({\n  episodesArray,\n}) => {\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const user = useAppSelector(UserSelectors.getUser);\n  const likedEpisodes = useAppSelector(UserSelectors.getLikedEpisodes);\n  const dislikedEpisodes = useAppSelector(UserSelectors.getDislikedEpisodes);\n\n  return (\n    <ul className=\"list-group list-group-light\">\n      {episodesArray.map(episode => (\n        <li\n          key={episode.id}\n          className=\"\n                myLink\n                clickable\n                bg-dark\n                char\n                list-group-item\n                d-flex\n                flex-lg-row\n                flex-column\n                justify-space-between\n                align-items-start\n                align-items-lg-center\n                border-success\"\n          onClick={() => {\n            dispatch(setCurrentEpisode(null));\n            navigate(`/episodes/${episode.id}`);\n          }}\n        >\n          <div\n            className=\"ms-2 me-2 mb-2 mb-md-0 d-flex justify-content-center align-items-center\"\n            style={{ gap: '20px' }}\n          >\n            <h3 className=\"fw-bold\">\n              {`Season: ${episode.episode.slice(1, 3)} `}\n              {`Episode: ${episode.episode.slice(4, 6)}`}\n            </h3>\n\n            <p\n              className=\"badge rounded-pill badge-light\"\n            >\n              {episode.name}\n            </p>\n          </div>\n\n          {user && (\n            <div className=\"\n                  btn-group\n                  me-2\n                  ms-2\n                  mt-2\n                  mt-lg-0\n                  d-flex\n                  justify-content-end\n                  align-items-center\"\n            >\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  dispatch(setCurrentUserLikedEpisodes(episode));\n                }}\n                className={classNames(\n                  'btn btn-light btn-floating',\n                  {\n                    'bg-success': likedEpisodes[episode.id],\n                  },\n                )}\n              >\n                <i className=\"fas fa-thumbs-up\"></i>\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  dispatch(setCurrentUserDislikedEpisodes(episode));\n                }}\n                className={classNames(\n                  'btn btn-light btn-floating',\n                  {\n                    'bg-danger': dislikedEpisodes[episode.id],\n                  },\n                )}\n              >\n                <i className=\"fas fa-thumbs-down\"></i>\n              </button>\n            </div>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { setCurrentLocation } from '../../store/LocationListReducer';\nimport { setCurrentUserDislikedLocations, setCurrentUserLikedLocations, UserSelectors } from '../../store/UserReducer';\nimport { Location } from '../../types/Location';\n\ntype Props = {\n  locationsArray: Location[],\n};\n\nexport const LocationsList: React.FC<Props> = memo(({\n  locationsArray,\n}) => {\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const likedLocations = useAppSelector(UserSelectors.getLikedLocations);\n  const dislikedLocations = useAppSelector(UserSelectors.getDislikedLocations);\n  const user = useAppSelector(UserSelectors.getUser);\n\n  return (\n    <ul className=\"list-group list-group-light\">\n      {locationsArray.map(location => (\n        <li\n          key={location.id}\n          className=\"\n                myLink\n                clickable\n                bg-dark\n                char\n                list-group-item\n                d-flex\n                flex-lg-row\n                flex-column\n                justify-space-between\n                align-items-start\n                align-items-lg-center\n                border-success\"\n          onClick={() => {\n            dispatch(setCurrentLocation(null));\n            navigate(`/locations/${location.id}`);\n          }}\n        >\n          <div\n            className=\"ms-2 me-2 mb-2 mb-md-0 d-flex justify-content-center align-items-center\"\n            style={{ gap: '20px' }}\n          >\n            <h3 className=\"fw-bold\">\n              {location.name}\n            </h3>\n\n            <p\n              className=\"badge rounded-pill badge-light\"\n            >\n              {location.type}\n            </p>\n          </div>\n\n          {user && (\n            <div className=\"\n                  btn-group\n                  me-2\n                  ms-2\n                  mt-2\n                  mt-lg-0\n                  d-flex\n                  justify-content-end\n                  align-items-center\"\n            >\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  dispatch(setCurrentUserLikedLocations(location));\n                }}\n                className={classNames(\n                  'btn btn-light btn-floating',\n                  {\n                    'bg-success': likedLocations[location.id],\n                  },\n                )}\n              >\n                <i className=\"fas fa-thumbs-up\"></i>\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  dispatch(setCurrentUserDislikedLocations(location));\n                }}\n                className={classNames(\n                  'btn btn-light btn-floating',\n                  {\n                    'bg-danger': dislikedLocations[location.id],\n                  },\n                )}\n              >\n                <i className=\"fas fa-thumbs-down\"></i>\n              </button>\n            </div>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { memo } from 'react';\nimport { useAppSelector } from '../../store';\n\nimport { UserSelectors } from '../../store/UserReducer';\nimport { CharsList } from '../CharsList';\nimport { EpisodesList } from '../EpisodesList';\nimport { LocationsList } from '../LocationsList';\n\nimport './MyProfilePage.scss';\n\nexport const MyProfilePage: React.FC = memo(() => {\n  const likedChars = useAppSelector(UserSelectors.getLikedChars);\n  const dislikedChars = useAppSelector(UserSelectors.getDislikedChars);\n  const likedLocations = useAppSelector(UserSelectors.getLikedLocations);\n  const dislikedLocations = useAppSelector(UserSelectors.getDislikedLocations);\n  const likedEpisodes = useAppSelector(UserSelectors.getLikedEpisodes);\n  const dislikedEpisodes = useAppSelector(UserSelectors.getDislikedEpisodes);\n\n  return (\n    <div className=\"container mt-3 mb-3\">\n      <div className=\"accordion border border-2 rounded\" id=\"accordionFlushExample\">\n        <div className=\"accordion-item bg-dark border-bottom\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className=\"accordion-button bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n            >\n              Liked Chars:\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show text-light\"\n            aria-labelledby=\"headingOne\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              {Object.keys(likedChars).length ? (\n                <CharsList charsArray={Object.values(likedChars)} />\n              ) : (\n                <i className=\"text-light\">No liked characters yet</i>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item bg-dark border-bottom\">\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              className=\"accordion-button collapsed bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n            >\n              Disliked Chars:\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              {Object.keys(dislikedChars).length ? (\n                <CharsList charsArray={Object.values(dislikedChars)} />\n              ) : (\n                <i className=\"text-light\">No disliked characters yet</i>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item bg-dark border-bottom\">\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button\n              className=\"accordion-button collapsed bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n            >\n              Liked Locations:\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              {Object.keys(likedLocations).length ? (\n                <LocationsList locationsArray={Object.values(likedLocations)} />\n              ) : (\n                <i className=\"text-light\">No liked locations yet</i>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item bg-dark border-bottom\">\n          <h2 className=\"accordion-header\" id=\"headingFour\">\n            <button\n              className=\"accordion-button collapsed bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseFour\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseFour\"\n            >\n              Disliked Locations:\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseFour\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingFour\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              {Object.keys(dislikedLocations).length ? (\n                <LocationsList locationsArray={Object.values(dislikedLocations)} />\n              ) : (\n                <i className=\"text-light\">No disliked locations yet</i>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item bg-dark border-bottom\">\n          <h2 className=\"accordion-header\" id=\"headingFive\">\n            <button\n              className=\"accordion-button collapsed bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseFive\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseFive\"\n            >\n              Liked Episodes:\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseFive\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingFive\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              {Object.keys(likedEpisodes).length ? (\n                <EpisodesList episodesArray={Object.values(likedEpisodes)} />\n              ) : (\n                <i className=\"text-light\">No liked episodes yet</i>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item bg-dark\">\n          <h2 className=\"accordion-header\" id=\"headingSix\">\n            <button\n              className=\"accordion-button collapsed bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseSix\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseSix\"\n            >\n              Disliked Episodes:\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseSix\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingSix\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              {Object.keys(dislikedEpisodes).length ? (\n                <EpisodesList episodesArray={Object.values(dislikedEpisodes)} />\n              ) : (\n                <i className=\"text-light\">No disliked episodes yet</i>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { memo, useCallback } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nimport './Header.scss';\n\nimport { FacebookResponse } from '../../types/FacebookResponse';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { Search } from '../Search/Search';\nimport { setUser, UserSelectors } from '../../store/UserReducer';\nimport { User } from '../../types/User';\n\nexport const Header: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(useLocation().search);\n  const user = useAppSelector(UserSelectors.getUser);\n\n  const responseFacebook = useCallback((response: FacebookResponse) => {\n    try {\n      if (localStorage.getItem(response.userID) !== null) {\n        dispatch(setUser(JSON.parse(localStorage.getItem(response.userID) || 'null')));\n\n        return;\n      }\n\n      const userObject: User = {\n        name: response.name,\n        image: response.picture.data.url,\n        userID: response.userID,\n        likedChars: {},\n        dislikedChars: {},\n        likedLocations: {},\n        dislikedLocations: {},\n        likedEpisodes: {},\n        dislikedEpisodes: {},\n      };\n\n      localStorage.setItem(response.userID, JSON.stringify(userObject));\n      dispatch(setUser(userObject));\n      searchParams.delete('code');\n    } catch {\n      dispatch(setUser(null));\n    }\n  }, []);\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-lg bg-dark\">\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-mdb-toggle=\"collapse\"\n            data-mdb-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <i className=\"fas fa-bars text-light\"></i>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <a className=\"navbar-brand mt-2 mt-lg-0\" href=\"#\">\n              <img\n                src=\"https://www.freeiconspng.com/thumbs/rick-and-morty-folder-icon/rick-and-morty-icon-png-images-29.png\"\n                height=\"50\"\n                alt=\"MDB Logo\"\n                loading=\"lazy\"\n              />\n            </a>\n\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <NavLink\n                  to=\"/\"\n                  className=\"nav-link myLink\"\n                  end\n                >\n                  Home\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink\n                  to=\"/characters\"\n                  className=\"nav-link myLink\"\n                  end\n                >\n                  Characters\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink\n                  to=\"/locations\"\n                  className=\"nav-link myLink\"\n                  end\n                >\n                  Locations\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink\n                  to=\"/episodes\"\n                  className=\"nav-link myLink\"\n                  end\n                >\n                  Episodes\n                </NavLink>\n              </li>\n            </ul>\n            <Search />\n          </div>\n\n          <div className=\"d-flex align-items-center\">\n            {user ? (\n              <div className=\"dropdown\">\n                <a\n                  href=\"#\"\n                  className=\"dropdown-toggle d-flex align-items-center hidden-arrow\"\n                  id=\"navbarDropdownMenuAvatar\"\n                  role=\"button\"\n                  data-mdb-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"nav-link ps-0 myLink\">\n                    {user.name}\n                  </div>\n\n                  <img\n                    className=\"rounded-circle nav-link\"\n                    height=\"50\"\n                    src={user.image}\n                    alt=\"My avatar\"\n                    loading=\"lazy\"\n                  />\n                </a>\n                <ul\n                  className=\"dropdown-menu dropdown-menu-start bg-dark\"\n                  aria-labelledby=\"navbarDropdownMenuAvatar\"\n                >\n                  <li>\n                    <NavLink\n                      to=\"/profile\"\n                      className=\"dropdown-item myLink btn\"\n                    >\n                      My profile\n                    </NavLink>\n                  </li>\n                  <li>\n                    <a\n                      className=\"dropdown-item btn btn-danger myLink\"\n                      href=\"#\"\n                      onClick={() => {\n                        dispatch(setUser(null));\n                        navigate('/list');\n                      }}\n                    >\n                      Logout\n                    </a>\n                  </li>\n                </ul>\n              </div>\n\n            ) : (\n              <div className=\"nav-link\">\n                <FacebookLogin\n                  appId=\"3056667237918240\"\n                  autoLoad\n                  scope=\"public_profile\"\n                  fields=\"name,picture\"\n                  callback={responseFacebook}\n                  icon=\"fa-facebook\"\n                  textButton=\"LOGIN\"\n                  cssClass=\"facebook\"\n                  authType=\"reauthorize\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n});\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAppSelector } from '../../store';\nimport { UserSelectors } from '../../store/UserReducer';\n\nexport const RequireAuth = ({ children }: { children: JSX.Element }) => {\n  const user = useAppSelector(UserSelectors.getUser);\n\n  if (!user) {\n    return <Navigate to=\"/list\" replace />;\n  }\n\n  return children;\n};\n","import React, { memo } from 'react';\n\nexport const Footer: React.FC = memo(() => {\n  return (\n    <footer className=\"bg-dark text-center text-white\">\n      <div className=\"container pt-4\">\n        <section className=\"mb-4\">\n          <a\n            className=\"btn btn-floating btn-lg m-1 myLink\"\n            href=\"https://www.linkedin.com/in/maksym-yaremenko-a68530239/\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            role=\"button\"\n            data-mdb-ripple-color=\"dark\"\n          >\n            <i className=\"fab fa-linkedin-in\"></i>\n          </a>\n\n          <a\n            className=\"btn btn-floating btn-lg m-1 myLink\"\n            href=\"https://github.com/yaremenko-maksym\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            role=\"button\"\n            data-mdb-ripple-color=\"dark\"\n          >\n            <i className=\"fab fa-github\"></i>\n          </a>\n        </section>\n      </div>\n\n      <div className=\"text-center p-3 d-flex flex-column flex-md-row gap-3 justify-content-center align-items-center\">\n        {'Prodject by Yaremenko Maksym '}\n        <a\n          className=\"myLink btn\"\n          target=\"_blank\"\n          href=\"https://www.freeprivacypolicy.com/live/91818545-f675-46d1-861b-eb73bf20319a\"\n          rel=\"noreferrer\"\n        >\n          Privacy Policy\n        </a>\n      </div>\n    </footer>\n  );\n});\n","import { v4 as uuid } from 'uuid';\n\nexport const paginate = (currentPage: number, lastPage: number, delta: number) => {\n  const result = [];\n\n  for (\n    let i = Math.max(2, (currentPage - delta));\n    i <= Math.min((lastPage - 1), (currentPage + delta));\n    i += 1\n  ) {\n    result.push(i);\n  }\n\n  if ((currentPage - delta) > 2) {\n    result.unshift('...');\n  }\n\n  if ((currentPage + delta) < (lastPage - 1)) {\n    result.push('...');\n  }\n\n  result.unshift(1);\n  if (lastPage !== 1) {\n    result.push(lastPage);\n  }\n\n  return result.map(value => ({\n    value,\n    id: uuid(),\n  }));\n};\n","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\n\nimport { paginate } from '../../functions/paginate';\n\nimport './Pagination.scss';\n\nimport { useAppSelector } from '../../store';\n\nimport { CharsSelectors } from '../../store/CharsListReducer';\nimport { LocationSelectors } from '../../store/LocationListReducer';\nimport { EpisodeSelectors } from '../../store/EpisodeListReducer';\n\nexport const Pagination: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPage = searchParams.get('page') || 1;\n\n  const [isPrevDisabled, setPrevDisability] = useState(true);\n  const [isNextDisabled, setNextDisability] = useState(false);\n\n  const lastCharsPage = useAppSelector(CharsSelectors.getCharsPagesCount);\n  const lastLocationsPage = useAppSelector(LocationSelectors.getLocationsPagesCount);\n  const lastEpisodesPage = useAppSelector(EpisodeSelectors.getEpisodesPageCount);\n\n  const visiblePages = useMemo(() => {\n    switch (true) {\n      case location.pathname.includes('characters'):\n        return paginate(+currentPage, lastCharsPage, 2);\n\n      case location.pathname.includes('locations'):\n        return paginate(+currentPage, lastLocationsPage, 1);\n\n      case location.pathname.includes('episodes'):\n        return paginate(+currentPage, lastEpisodesPage, 2);\n\n      default:\n        return paginate(1, 1, 1);\n    }\n  }, [location, lastCharsPage, lastLocationsPage, lastEpisodesPage]);\n\n  useEffect(() => {\n    if (+currentPage === visiblePages[visiblePages.length - 1].value) {\n      setNextDisability(true);\n    } else {\n      setNextDisability(false);\n    }\n\n    if (+currentPage > 1) {\n      setPrevDisability(false);\n    } else {\n      setPrevDisability(true);\n    }\n  }, [location, lastCharsPage, lastLocationsPage, lastEpisodesPage]);\n\n  return (\n    <div className=\"container pagination-container bg-dark d-flex justify-content-center align-items-center\">\n      <nav className=\"Page navigation example\">\n\n        <div className=\"pagination\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              searchParams.set('page', (+currentPage - 1).toString());\n              navigate(`?page=${(+currentPage - 1).toString()}`);\n            }}\n            disabled={isPrevDisabled}\n            className=\"page-item page-link pagination-link\"\n            aria-label=\"Previous\"\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </button>\n\n          {visiblePages.map(item => {\n            if (item.value === '...') {\n              return (\n                <p\n                  key={item.id}\n                  className=\"page-item page-link pagination-link\"\n                >\n                  {item.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                key={item.id}\n                type=\"button\"\n                onClick={() => {\n                  searchParams.set('page', item.value.toString());\n                  navigate(`?page=${item.value}`);\n                }}\n                className={classNames(\n                  'page-link pagination-link',\n                  { 'pagination__button--selected': +currentPage === item.value },\n                )}\n              >\n                {item.value}\n              </button>\n            );\n          })}\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              searchParams.set('page', (+currentPage + 1).toString());\n              navigate(`?page=${(+currentPage + 1).toString()}`);\n            }}\n            disabled={isNextDisabled}\n            className=\"page-item page-link pagination-link\"\n            aria-label=\"Next\"\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, memo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nimport {\n  loadPageOfCharsFromServer,\n  CharsSelectors,\n  setIsCharListLoading,\n} from '../../store/CharsListReducer';\nimport { Pagination } from '../Pagination';\n\nimport './CharListPage.scss';\nimport { CharsList } from '../CharsList';\nimport { Loader } from '../Loader';\n\nexport const CharListPage: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const page = searchParams.get('page') || 1;\n\n  const dispatch = useAppDispatch();\n  const chars = useAppSelector(CharsSelectors.getChars);\n  const maxPages = useAppSelector(CharsSelectors.getCharsPagesCount);\n  const isListLoading = useAppSelector(CharsSelectors.getIsCharListLoading);\n\n  useEffect(() => {\n    dispatch(setIsCharListLoading(true));\n\n    if (+page > maxPages || +page < 1 || Number.isNaN(+page)) {\n      navigate('/characters/?page=1');\n\n      return;\n    }\n\n    dispatch(loadPageOfCharsFromServer(+page));\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"container p-2 rounded-6 bg-dark list-container\">\n        {isListLoading && <Loader size=\"big\" />}\n        <CharsList charsArray={chars} />\n      </div>\n\n      <Pagination />\n    </>\n  );\n});\n","import React, { memo } from 'react';\n\nexport const HomePage: React.FC = memo(() => {\n  return (\n    <div className=\"container rounded-6 bg-dark mt-3 mb-3 p-5\">\n      <h1 className=\"display-3 text-center text-light mb-5\">\n        <strong>\n          Welcome to my &quot;Rick and Morty&quot; project\n        </strong>\n      </h1>\n\n      <p className=\"text-light mb-2\">Description :</p>\n\n      <div className=\"accordion border border-2 rounded\" id=\"accordionFlushExample\">\n        <div className=\"accordion-item bg-dark border-bottom\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className=\"accordion-button bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n            >\n              Functionality\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show text-light\"\n            aria-labelledby=\"headingOne\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              <dl className=\"row\">\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Tab autocomplete\n                </dt>\n                <dd className=\"col-sm-9\">\n                  Press tab when using search\n                </dd>\n\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Arrow navigation\n                </dt>\n                <dd className=\"col-sm-9\">\n                  Press up/down arrow when using search\n                </dd>\n\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Enter search\n                </dt>\n                <dd className=\"col-sm-9\">\n                  Press enter to go to character page\n                </dd>\n\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Pagination\n                </dt>\n                <dd className=\"col-sm-9\">\n                  Use pagination to navigate through the list\n                </dd>\n\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Like/dislike\n                </dt>\n                <dd className=\"col-sm-9\">\n                  To like/dislike you need to authorize with facebook\n                </dd>\n\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Saved list of liked/disliked\n                </dt>\n                <dd className=\"col-sm-9\">\n                  Data about your liked/disliked characters/locations/episodes saved in\n                  {' '}\n                  <b className=\"text-warning\">localStorage</b>\n                </dd>\n\n                <dt className=\"col-sm-3 mb-3 text-success\">\n                  Change character photo\n                </dt>\n                <dd className=\"col-sm-9\">\n                  Only for authorized users\n                </dd>\n              </dl>\n\n              <p className=\"note note-danger text-dark\">\n                <strong>Note :</strong>\n                {' '}\n                To get all the functionality make sure that you are logged in with a Facebook!\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item bg-dark\">\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              className=\"accordion-button collapsed bg-dark text-light\"\n              type=\"button\"\n              data-mdb-toggle=\"collapse\"\n              data-mdb-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n            >\n              Technologies\n            </button>\n          </h2>\n\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-mdb-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\">\n              <ul className=\"list-inline\">\n                <li className=\"list-inline-item myLink\">React</li>\n                <li className=\"list-inline-item myLink\">TypeScript</li>\n                <li className=\"list-inline-item myLink\">React Router v6</li>\n                <li className=\"list-inline-item myLink\">Redux Toolkit</li>\n                <li className=\"list-inline-item myLink\">SCSS</li>\n                <li className=\"list-inline-item myLink\">Facebook Auth API</li>\n                <li className=\"list-inline-item myLink\">MDBootstrap</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { loadPageOfLocationsFromServer, LocationSelectors, setIsLocationListLoading } from '../../store/LocationListReducer';\n\nimport { Loader } from '../Loader';\nimport { LocationsList } from '../LocationsList';\nimport { Pagination } from '../Pagination';\n\nexport const LocationListPage: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const page = searchParams.get('page') || 1;\n\n  const dispatch = useAppDispatch();\n  const locations = useAppSelector(LocationSelectors.getLocations);\n  const maxPages = useAppSelector(LocationSelectors.getLocationsPagesCount);\n  const isListLoading = useAppSelector(LocationSelectors.getIsLocationListLoading);\n\n  useEffect(() => {\n    dispatch(setIsLocationListLoading(true));\n\n    if (+page > maxPages || +page < 1 || Number.isNaN(+page)) {\n      navigate('/locations/?page=1');\n\n      return;\n    }\n\n    dispatch(loadPageOfLocationsFromServer(+page));\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"container p-2 rounded-6 bg-dark list-container\">\n        {isListLoading && <Loader size=\"big\" />}\n        <LocationsList locationsArray={locations} />\n      </div>\n\n      <Pagination />\n    </>\n  );\n});\n","import React, { memo, useEffect, useMemo } from 'react';\nimport {\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nimport './LocationPage.scss';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { loadLocationByIDFromServer, LocationSelectors, setIsLocationPageLoading } from '../../store/LocationListReducer';\n\nimport { Loader } from '../Loader';\nimport { CharsList } from '../CharsList';\n\nexport const LocationPage: React.FC = memo(() => {\n  const { locationID } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const currentLocation = useAppSelector(LocationSelectors.getCurrentLocation);\n  const isLocationPageLoading = useAppSelector(LocationSelectors.getIsLocationPageLoading);\n  const totalLocations = useAppSelector(LocationSelectors.getTotalLocations);\n\n  const currentLocationDate = useMemo(() => {\n    if (currentLocation) {\n      const date = new Date(currentLocation.created);\n\n      return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n      };\n    }\n\n    return null;\n  }, [currentLocation]);\n\n  useEffect(() => {\n    if (locationID) {\n      dispatch(setIsLocationPageLoading(true));\n\n      if (totalLocations !== 0\n        && (+locationID > totalLocations || +locationID < 0 || Number.isNaN(+locationID))) {\n        navigate('/locations');\n\n        return;\n      }\n\n      dispatch(loadLocationByIDFromServer(+locationID));\n    }\n  }, [locationID, totalLocations]);\n\n  return (\n    <div className=\"container bg-dark mt-3 mb-3 p-3 rounded-6\">\n      {isLocationPageLoading && <Loader size=\"big\" />}\n\n      {currentLocation && (\n        <div className=\"d-flex justify-content-between flex-column flex-md-row\">\n          <div className=\"d-flex flex-column info p-4\">\n            <h1 className=\"display-3 text-light mb-5 mb-lg-10 border-bottom border-success\">\n              {currentLocation.name}\n            </h1>\n\n            <div>\n              <h3 className=\"text-light mb-lg-6\">\n                {`Type: ${currentLocation.type}`}\n              </h3>\n\n              <h3 className=\"text-light mb-lg-6\">\n                {`Dimension: ${currentLocation.dimension}`}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {`Created date: ${currentLocationDate?.day}.${currentLocationDate?.month}.${currentLocationDate?.year}`}\n              </h3>\n            </div>\n          </div>\n\n          <div className=\"p-4\">\n            <h2\n              className=\"display-5 text-light\"\n            >\n              Residents :\n            </h2>\n            <div className=\"location-residents\">\n              <CharsList charsArray={currentLocation.residents} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React, { memo, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { EpisodeSelectors, loadPageOfEpisodesFromServer, setIsEpisodeListLoading } from '../../store/EpisodeListReducer';\nimport { EpisodesList } from '../EpisodesList';\nimport { Loader } from '../Loader';\nimport { Pagination } from '../Pagination';\n\nexport const EpisodeListPage: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n\n  const episodes = useAppSelector(EpisodeSelectors.getEpisodes);\n  const maxPages = useAppSelector(EpisodeSelectors.getEpisodesPageCount);\n  const isListLoading = useAppSelector(EpisodeSelectors.getIsEpisodeListLoading);\n\n  const searchParams = new URLSearchParams(location.search);\n  const page = searchParams.get('page') || 1;\n\n  useEffect(() => {\n    dispatch(setIsEpisodeListLoading(true));\n\n    if (+page > maxPages || +page < 1 || Number.isNaN(+page)) {\n      navigate('/locations/?page=1');\n\n      return;\n    }\n\n    dispatch(loadPageOfEpisodesFromServer(+page));\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"container p-2 rounded-6 bg-dark list-container\">\n        {isListLoading && <Loader size=\"big\" />}\n        <EpisodesList episodesArray={episodes} />\n      </div>\n\n      <Pagination />\n    </>\n  );\n});\n","import React, { memo, useEffect, useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport './EpisodePage.scss';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { EpisodeSelectors, loadEpisodeByIDFromServer, setIsEpisodePageLoading } from '../../store/EpisodeListReducer';\n\nimport { CharsList } from '../CharsList';\nimport { Loader } from '../Loader';\n\nexport const EpisodePage: React.FC = memo(() => {\n  const { episodeID } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const currentEpisode = useAppSelector(EpisodeSelectors.getCurrentEpisode);\n  const isEpisodePageLoading = useAppSelector(EpisodeSelectors.getIsEpisodePageLoading);\n  const totalEpisodes = useAppSelector(EpisodeSelectors.getTotalEpisodes);\n\n  const currentEpisodeDate = useMemo(() => {\n    if (currentEpisode) {\n      const date = new Date(currentEpisode.created);\n\n      return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n      };\n    }\n\n    return null;\n  }, [currentEpisode]);\n\n  useEffect(() => {\n    if (episodeID) {\n      dispatch(setIsEpisodePageLoading(true));\n\n      if (totalEpisodes !== 0\n        && (+episodeID > totalEpisodes || +episodeID < 0 || Number.isNaN(+episodeID))) {\n        navigate('/locations');\n\n        return;\n      }\n\n      dispatch(loadEpisodeByIDFromServer(+episodeID));\n    }\n  }, [episodeID, totalEpisodes]);\n\n  return (\n    <div className=\"container bg-dark mt-3 mb-3 p-3 rounded-6\">\n      {isEpisodePageLoading && <Loader size=\"big\" />}\n\n      {currentEpisode && (\n        <div className=\"d-flex justify-content-between flex-column flex-md-row\">\n          <div className=\"d-flex flex-column info p-4\">\n            <h1 className=\"display-3 text-light mb-5 mb-lg-10 border-bottom border-success\">\n              {`${currentEpisode.episode}: ${currentEpisode.name}`}\n            </h1>\n\n            <div>\n              <h3 className=\"text-light mb-lg-6\">\n                {`Air date: ${currentEpisode.air_date}`}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {`Created date: ${currentEpisodeDate?.day}.${currentEpisodeDate?.month}.${currentEpisodeDate?.year}`}\n              </h3>\n            </div>\n          </div>\n\n          <div className=\"p-4\">\n            <h2\n              className=\"display-5 text-light\"\n            >\n              Characters :\n            </h2>\n            <div className=\"episode-characters\">\n              <CharsList charsArray={currentEpisode.characters} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { CharPage } from './components/CharPage';\nimport { MyProfilePage } from './components/MyProfilePage';\nimport { Header } from './components/Header';\nimport { RequireAuth } from './components/RequireAuth';\nimport { Footer } from './components/Footer';\nimport { CharListPage } from './components/CharListPage';\nimport { HomePage } from './components/HomePage';\nimport { LocationListPage } from './components/LocationListPage';\nimport { LocationPage } from './components/LocationPage';\nimport { EpisodeListPage } from './components/EpisodeListPage';\nimport { EpisodePage } from './components/EpisodePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <main className=\"main bg-image main-background\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/characters\" element={<CharListPage />} />\n          <Route path=\"/characters/:charID\" element={<CharPage />} />\n          <Route path=\"/locations\" element={<LocationListPage />} />\n          <Route path=\"/locations/:locationID\" element={<LocationPage />} />\n          <Route path=\"/episodes\" element={<EpisodeListPage />} />\n          <Route path=\"/episodes/:episodeID\" element={<EpisodePage />} />\n          <Route\n            path=\"/profile\"\n            element={(\n              <RequireAuth>\n                <MyProfilePage />\n              </RequireAuth>\n            )}\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport { App } from './App';\nimport { store } from './store';\n\nrender(\n  <HashRouter>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
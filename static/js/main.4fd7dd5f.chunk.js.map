{"version":3,"sources":["components/Search/Search.module.scss","api/api.ts","store/CharsListReducer.ts","store/index.ts","components/Loader/Loader.tsx","components/CharPage/CharPage.tsx","functions/URLValidator.ts","components/Pagination/Pagination.tsx","functions/paginate.ts","components/CharsList/CharsList.tsx","components/MyProfilePage/MyProfilePage.tsx","components/Search/Search.tsx","components/Header/Header.tsx","components/RequireAuth/RequireAuth.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["module","exports","BASE_URL","getPageOfCharactersFromServer","page","a","fetch","response","ok","Error","json","getCharacterByIDFromServer","id","getFilteredCharactersFromServer","query","loadPageOfCharsFromServer","createAsyncThunk","loadCharByIDFromServer","loadFilteredCharactersFromServer","CharsListReducer","createSlice","name","initialState","chars","currentChar","filteredCharacters","nameQuery","isListLoading","isCharPageLoading","nextPage","prevPage","user","pagesCount","totalChars","reducers","setCurrentChar","state","action","payload","setIsListLoading","setIsCharPageLoading","setUser","setCurrentUserLikedChars","likedChars","some","char","filter","localStorage","removeItem","userID","setItem","JSON","stringify","push","dislikedChars","setCurrentUserDislikedChars","setCurrentCharPhoto","image","setCurrentQuery","extraReducers","builder","addCase","fulfilled","results","info","next","prev","pages","count","actions","selectors","rootReducer","combineReducers","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Loader","memo","size","className","classNames","CharPage","charID","useParams","navigate","useNavigate","dispatch","useState","isPhotoChangeInputVisible","setIsPhotoChangeInputVisible","isURLValid","setIsURLValid","newPhotoUrl","setNewPhotoUrl","currentCharDate","useMemo","date","Date","created","day","getDate","month","getMonth","year","getFullYear","handleNewImgUpload","useCallback","e","preventDefault","match","useEffect","Number","isNaN","src","alt","type","value","onChange","target","placeholder","onClick","event","species","gender","location","data-mdb-toggle","aria-expanded","episode","map","link","split","status","Pagination","searchParams","URLSearchParams","useLocation","search","currentPage","get","isPrevDisabled","setPrevDisability","isNextDisabled","setNextDisability","total","last","perPage","visiblePages","lastPage","result","i","Math","max","min","unshift","uuid","paginate","length","set","toString","disabled","aria-label","aria-hidden","item","CharsList","maxPages","style","gap","stopPropagation","likedChar","dislikedChar","MyProfilePage","Search","filteredChars","userInput","setUserInput","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","applyQuery","debounce","newQuery","handleChange","currentInput","currentTarget","handleChoose","handleKeyDown","code","prevValue","suggestionsListComponent","styles","suggestionsList","index","onMouseEnter","suggestionsList__item","onKeyDown","autoComplete","minWidth","role","Header","responseFacebook","getItem","parse","userObject","picture","data","url","delete","data-mdb-target","aria-controls","href","height","loading","to","aria-labelledby","appId","autoLoad","fields","callback","icon","textButton","cssClass","RequireAuth","children","replace","Footer","rel","data-mdb-ripple-color","App","path","element","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd7dd5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestionsList\":\"Search_suggestionsList__212lT\"};","/* eslint-disable no-console */\nimport { CharactersResponse } from '../types/CharactersResponse';\n\nexport const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const getPageOfCharactersFromServer = async (\n  page: number,\n): Promise<CharactersResponse> => {\n  const response = await fetch(`${BASE_URL}/character?page=${page}`);\n\n  if (!response.ok) {\n    throw new Error();\n  }\n\n  return response.json();\n};\n\nexport const getCharacterByIDFromServer = async (id: number) => {\n  const response = await fetch(`${BASE_URL}/character/${id}`);\n\n  return response.json();\n};\n\nexport const getFilteredCharactersFromServer = async (\n  query: string,\n): Promise<CharactersResponse> => {\n  const response = await fetch(`${BASE_URL}/character/?name=${query}`);\n\n  return response.json();\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getPageOfCharactersFromServer, getCharacterByIDFromServer, getFilteredCharactersFromServer } from '../api/api';\nimport { Character } from '../types/Character';\nimport { User } from '../types/User';\n\ninterface CharsListState {\n  chars: Character[],\n  currentChar: Character | null,\n  filteredCharacters: Character[],\n  nameQuery: string,\n  isListLoading: boolean,\n  isCharPageLoading: boolean,\n  nextPage: string | null,\n  prevPage: string | null,\n  user: User | null,\n  pagesCount: number,\n  totalChars: number,\n}\n\nconst initialState: CharsListState = {\n  chars: [],\n  currentChar: null,\n  filteredCharacters: [],\n  nameQuery: '',\n  isListLoading: false,\n  isCharPageLoading: false,\n  nextPage: null,\n  prevPage: null,\n  user: null,\n  pagesCount: 1,\n  totalChars: 0,\n};\n\nexport const loadPageOfCharsFromServer = createAsyncThunk(\n  'CharsList/loadPageOfChars',\n  async (page: number) => {\n    try {\n      const response = await getPageOfCharactersFromServer(page);\n\n      return response;\n    } catch {\n      return 'Error';\n    }\n  },\n);\n\nexport const loadCharByIDFromServer = createAsyncThunk(\n  'CharsList/loadCharPageByID',\n  async (id: number) => {\n    const response = await getCharacterByIDFromServer(id);\n\n    return response;\n  },\n);\n\nexport const loadFilteredCharactersFromServer = createAsyncThunk(\n  'CharsList/loadFilteredCharacters',\n  async (query: string) => {\n    const response = await getFilteredCharactersFromServer(query);\n\n    return response;\n  },\n);\n\nconst CharsListReducer = createSlice({\n  name: 'CharsListReducer',\n  initialState,\n  reducers: {\n    setCurrentChar: (state, action: PayloadAction<Character | null>) => {\n      state.currentChar = action.payload;\n    },\n    setIsListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isListLoading = action.payload;\n    },\n    setIsCharPageLoading: (state, action: PayloadAction<boolean>) => {\n      state.isCharPageLoading = action.payload;\n    },\n    setUser: (state, action: PayloadAction<User | null>) => {\n      state.user = action.payload;\n    },\n    setCurrentUserLikedChars: (state, action: PayloadAction<Character>) => {\n      if (state.user) {\n        if (state.user.likedChars?.some(char => char.id === action.payload.id)) {\n          state.user.likedChars = state.user?.likedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.likedChars?.push(action.payload);\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user?.dislikedChars.some(char => char.id === action.payload.id)) {\n          state.user.dislikedChars = state.user?.dislikedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserDislikedChars: (state, action: PayloadAction<Character>) => {\n      if (state.user) {\n        if (state.user?.dislikedChars.some(char => char.id === action.payload.id)) {\n          state.user.dislikedChars = state.user?.dislikedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.dislikedChars?.push(action.payload);\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user?.likedChars.some(char => char.id === action.payload.id)) {\n          state.user.likedChars = state.user?.likedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentCharPhoto: (state, action: PayloadAction<string>) => {\n      if (state.currentChar) {\n        state.currentChar.image = action.payload;\n      }\n    },\n    setCurrentQuery: (state, action: PayloadAction<string>) => {\n      state.nameQuery = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadPageOfCharsFromServer.fulfilled, (state, action) => {\n      if (action.payload === 'Error') {\n        state.chars = [];\n        state.nextPage = null;\n        state.prevPage = null;\n        state.pagesCount = 1;\n        state.totalChars = 0;\n        state.isListLoading = false;\n\n        return;\n      }\n\n      state.chars = action.payload.results;\n      state.nextPage = action.payload.info.next;\n      state.prevPage = action.payload.info.prev;\n      state.pagesCount = action.payload.info.pages;\n      state.totalChars = action.payload.info.count;\n      state.isListLoading = false;\n    });\n    builder.addCase(loadCharByIDFromServer.fulfilled, (state, action) => {\n      state.currentChar = action.payload;\n      state.isCharPageLoading = false;\n    });\n    builder.addCase(loadFilteredCharactersFromServer.fulfilled, (state, action) => {\n      if (action.payload.results) {\n        state.filteredCharacters = action.payload.results;\n      } else {\n        state.filteredCharacters = [];\n      }\n    });\n  },\n});\n\nexport const {\n  setIsListLoading,\n  setIsCharPageLoading,\n  setCurrentChar,\n  setUser,\n  setCurrentUserLikedChars,\n  setCurrentUserDislikedChars,\n  setCurrentCharPhoto,\n  setCurrentQuery,\n} = CharsListReducer.actions;\n\nexport default CharsListReducer.reducer;\n\nexport const selectors = {\n  getChars: (state: RootState) => {\n    return state.CharsListReducer.chars;\n  },\n  getLikedChars: (state: RootState) => {\n    return state.CharsListReducer.user?.likedChars;\n  },\n  getFilteredCharacters: (state: RootState) => {\n    return state.CharsListReducer.filteredCharacters;\n  },\n  getDislikedChars: (state: RootState) => {\n    return state.CharsListReducer.user?.dislikedChars;\n  },\n  getCurrentChar: (state: RootState) => {\n    return state.CharsListReducer.currentChar;\n  },\n  getIsListLoading: (state: RootState) => {\n    return state.CharsListReducer.isListLoading;\n  },\n  getIsCharPageLoading: (state: RootState) => {\n    return state.CharsListReducer.isCharPageLoading;\n  },\n  getNextPage: (state: RootState) => {\n    return state.CharsListReducer.nextPage;\n  },\n  getPrevPage: (state: RootState) => {\n    return state.CharsListReducer.prevPage;\n  },\n  getUser: (state: RootState) => {\n    return state.CharsListReducer.user;\n  },\n  getTotalChars: (state: RootState) => {\n    return state.CharsListReducer.totalChars;\n  },\n  getPagesCount: (state: RootState) => {\n    return state.CharsListReducer.pagesCount;\n  },\n  getNameQuery: (state: RootState) => {\n    return state.CharsListReducer.nameQuery;\n  },\n};\n","/* eslint-disable import/no-cycle */\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport CharsListReducer from './CharsListReducer';\n\nconst rootReducer = combineReducers({\n  CharsListReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nimport './Loader.scss';\n\ntype Props = {\n  size: 'small' | 'big';\n};\n\nexport const Loader: React.FC<Props> = memo(({\n  size,\n}) => (\n  <div className=\"Loader\">\n    <div className={classNames(\n      'Loader__content',\n      { 'Loader__content--small': size === 'small' },\n      { 'Loader__content--big': size === 'big' },\n    )}\n    />\n  </div>\n));\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  loadCharByIDFromServer,\n  selectors,\n  setCurrentCharPhoto,\n  setIsCharPageLoading,\n} from '../../store/CharsListReducer';\n\nimport { Loader } from '../Loader';\nimport { urlValidator } from '../../functions/URLValidator';\n\nimport './CharPage.scss';\n\nexport const CharPage: React.FC = memo(() => {\n  const { charID } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n\n  const [isPhotoChangeInputVisible, setIsPhotoChangeInputVisible] = useState(false);\n  const [isURLValid, setIsURLValid] = useState(true);\n  const [newPhotoUrl, setNewPhotoUrl] = useState('');\n\n  const currentChar = useAppSelector(selectors.getCurrentChar);\n  const isCharPageLoading = useAppSelector(selectors.getIsCharPageLoading);\n  const user = useAppSelector(selectors.getUser);\n  const totalChars = useAppSelector(selectors.getTotalChars);\n\n  const currentCharDate = useMemo(() => {\n    if (currentChar) {\n      const date = new Date(currentChar.created);\n\n      return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n      };\n    }\n\n    return null;\n  }, [currentChar]);\n\n  const handleNewImgUpload = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!urlValidator(newPhotoUrl)) {\n      setIsURLValid(false);\n\n      return;\n    }\n\n    setIsURLValid(true);\n    setIsPhotoChangeInputVisible(false);\n    dispatch(setCurrentCharPhoto(newPhotoUrl));\n  }, [newPhotoUrl]);\n\n  useEffect(() => {\n    if (charID) {\n      dispatch(setIsCharPageLoading(true));\n\n      if (+charID > totalChars || +charID < 0 || Number.isNaN(+charID)) {\n        navigate('/list');\n      }\n\n      dispatch(loadCharByIDFromServer(+charID));\n    }\n  }, [charID]);\n\n  return (\n    <div className=\"container charPage-container bg-dark\">\n      {isCharPageLoading && <Loader size=\"big\" />}\n\n      {currentChar && (\n        <div className=\"d-flex flex-column\">\n          <div>\n            <h2 className=\"text-light\">\n              {currentChar.name}\n            </h2>\n          </div>\n\n          <div className=\"d-flex flex-column flex-md-row\">\n            <div className=\"me-3\">\n              <img\n                src={currentChar.image}\n                alt={`${currentChar.name} poster`}\n                className=\"img-thumbnail char-image\"\n              />\n\n              {user && (\n                <div>\n                  {isPhotoChangeInputVisible ? (\n                    <div className=\"d-flex flex-column\">\n                      <input\n                        type=\"text\"\n                        value={newPhotoUrl}\n                        onChange={({ target }) => {\n                          setNewPhotoUrl(target.value);\n                          setIsURLValid(true);\n                        }}\n                        placeholder=\"Image URL...\"\n                        className=\"form-control mb-1\"\n                      />\n\n                      {!isURLValid && (\n                        <p className=\"form-helper text-danger\">*Invalid url</p>\n                      )}\n\n                      <button\n                        type=\"submit\"\n                        onClick={(event) => {\n                          handleNewImgUpload(event);\n                        }}\n                        className=\"text-light btn btn-success mb-1\"\n                      >\n                        Apply Change\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          setIsPhotoChangeInputVisible(false);\n                        }}\n                        className=\"text-light btn btn-danger\"\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  ) : (\n                    <i\n                      className=\"fas fa-camera-retro fa-2x text-success clickable\"\n                      onClick={() => setIsPhotoChangeInputVisible(true)}\n                    >\n                    </i>\n                  )}\n                </div>\n              )}\n            </div>\n\n            <div className=\"d-flex flex-column info\">\n              <h3 className=\"text-light\">\n                {currentChar.species}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {currentChar.gender}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {'Location: '}\n                {currentChar.location.name}\n              </h3>\n\n              <button\n                className=\"btn btn-light dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-mdb-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Episodes\n              </button>\n              <ul\n                className=\"dropdown-menu my-dropdown\"\n              >\n                {currentChar.episode.map(link => (\n                  <li\n                    key={link}\n                    className=\"dropdown-item\"\n                  >\n                    {link.split('/')[5]}\n                  </li>\n                ))}\n              </ul>\n\n              <h3 className={classNames(\n                { 'text-success': currentChar.status === 'Alive' },\n                { 'text-danger': currentChar.status === 'Dead' },\n                { 'text-warning': currentChar.status === 'unknown' },\n              )}\n              >\n                {currentChar.status}\n              </h3>\n\n              <h3 className=\"text-light\">\n                {`Created date: ${currentCharDate?.day}.${currentCharDate?.month}.${currentCharDate?.year}`}\n              </h3>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","export function urlValidator(str: string) {\n  const validUrlRegex = /^https?:\\/\\/.*\\/.*\\.(png|gif|webp|jpeg|jpg)\\??.*$/gmi;\n\n  return str.match(validUrlRegex);\n}\n","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\n\nimport { paginate } from '../../functions/paginate';\n\nimport './Pagination.scss';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nimport {\n  loadPageOfCharsFromServer,\n  selectors,\n} from '../../store/CharsListReducer';\n\nexport const Pagination: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(useLocation().search);\n  const currentPage = searchParams.get('page') || 1;\n\n  const [isPrevDisabled, setPrevDisability] = useState(true);\n  const [isNextDisabled, setNextDisability] = useState(false);\n\n  const total = useAppSelector(selectors.getTotalChars);\n  const last = useAppSelector(selectors.getPagesCount);\n  const perPage = useMemo(() => 20, []);\n\n  const visiblePages = useMemo(() => {\n    return paginate(+currentPage, last);\n  }, [currentPage, total, perPage]);\n\n  useEffect(() => {\n    if (+currentPage === visiblePages[visiblePages.length - 1].value) {\n      setNextDisability(true);\n    } else {\n      setNextDisability(false);\n    }\n\n    if (+currentPage > 1) {\n      setPrevDisability(false);\n    } else {\n      setPrevDisability(true);\n    }\n\n    dispatch(loadPageOfCharsFromServer(+currentPage));\n  }, [currentPage, total]);\n\n  return (\n    <div className=\"container pagination-container bg-dark d-flex justify-content-center align-items-center\">\n      <nav className=\"Page navigation example\">\n\n        <div className=\"pagination\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              searchParams.set('page', (+currentPage - 1).toString());\n              navigate(`?page=${(+currentPage - 1).toString()}`);\n            }}\n            disabled={isPrevDisabled}\n            className=\"page-item page-link pagination-link\"\n            aria-label=\"Previous\"\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </button>\n\n          {visiblePages.map(item => {\n            if (item.value === '...') {\n              return (\n                <p\n                  key={item.id}\n                  className=\"page-item page-link pagination-link\"\n                >\n                  {item.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                key={item.id}\n                type=\"button\"\n                onClick={() => {\n                  searchParams.set('page', item.value.toString());\n                  navigate(`?page=${item.value}`);\n                }}\n                className={classNames(\n                  'page-link pagination-link',\n                  { 'pagination__button--selected': +currentPage === item.value },\n                )}\n              >\n                {item.value}\n              </button>\n            );\n          })}\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              searchParams.set('page', (+currentPage + 1).toString());\n              navigate(`?page=${(+currentPage + 1).toString()}`);\n            }}\n            disabled={isNextDisabled}\n            className=\"page-item page-link pagination-link\"\n            aria-label=\"Next\"\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n});\n","import { v4 as uuid } from 'uuid';\n\nexport const paginate = (currentPage: number, lastPage: number) => {\n  const delta = 2;\n  const result = [];\n\n  for (\n    let i = Math.max(2, (currentPage - delta));\n    i <= Math.min((lastPage - 1), (currentPage + delta));\n    i += 1\n  ) {\n    result.push(i);\n  }\n\n  if ((currentPage - delta) > 2) {\n    result.unshift('...');\n  }\n\n  if ((currentPage + delta) < (lastPage - 1)) {\n    result.push('...');\n  }\n\n  result.unshift(1);\n  if (lastPage !== 1) {\n    result.push(lastPage);\n  }\n\n  return result.map(value => ({\n    value,\n    id: uuid(),\n  }));\n};\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, memo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nimport {\n  setCurrentUserDislikedChars,\n  setCurrentUserLikedChars,\n  loadPageOfCharsFromServer,\n  selectors,\n  setCurrentChar,\n  setIsListLoading,\n} from '../../store/CharsListReducer';\nimport { Loader } from '../Loader';\nimport { Pagination } from '../Pagination';\n\nimport './CharsList.scss';\n\nexport const CharsList: React.FC = memo(() => {\n  const navigate = useNavigate();\n\n  const searchParams = new URLSearchParams(useLocation().search);\n  const page = searchParams.get('page') || 1;\n\n  const dispatch = useAppDispatch();\n  const chars = useAppSelector(selectors.getChars);\n  const likedChars = useAppSelector(selectors.getLikedChars);\n  const dislikedChars = useAppSelector(selectors.getDislikedChars);\n  const isListLoading = useAppSelector(selectors.getIsListLoading);\n  const user = useAppSelector(selectors.getUser);\n  const maxPages = useAppSelector(selectors.getPagesCount);\n\n  useEffect(() => {\n    dispatch(setIsListLoading(true));\n\n    if (+page > maxPages || +page < 1 || Number.isNaN(+page)) {\n      navigate('/list/?page=1');\n\n      return;\n    }\n\n    dispatch(loadPageOfCharsFromServer(+page));\n  }, [page]);\n\n  return (\n    <>\n      <div className=\"container bg-dark\">\n        <ul className=\"list-group list-group-light list-container\">\n          {isListLoading && <Loader size=\"big\" />}\n          {chars.map(char => (\n            <li\n              key={char.id}\n              className=\"\n                clickable\n                bg-dark\n                char\n                list-group-item\n                d-flex\n                flex-md-row\n                flex-column\n                justify-space-between\n                align-items-start\n                align-items-md-center\n                border-success\"\n              onClick={() => {\n                dispatch(setCurrentChar(null));\n                navigate(`/list/${char.id}`);\n              }}\n            >\n              <div\n                className=\"ms-2 me-2 mb-2 mb-md-0 d-flex justify-content-center align-items-center\"\n                style={{ gap: '20px' }}\n              >\n                <img\n                  src={char.image}\n                  alt={`${char.name} poster`}\n                  className=\"img-fluid rounded shadow-3 char__image\"\n                />\n\n                <h3 className=\"fw-bold text-light\">\n                  {char.name}\n                </h3>\n\n                <p\n                  className={classNames(\n                    'badge rounded-pill badge-light',\n                    { 'text-success': char.status === 'Alive' },\n                    { 'text-danger': char.status === 'Dead' },\n                    { 'text-warning': char.status === 'unknown' },\n                  )}\n                >\n                  {char.status}\n                </p>\n              </div>\n\n              {user && (\n                <div className=\"\n                  btn-group\n                  me-2\n                  ms-2\n                  d-flex\n                  justify-content-end\n                  align-items-center\"\n                >\n                  <button\n                    type=\"button\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      dispatch(setCurrentUserLikedChars(char));\n                    }}\n                    className={classNames(\n                      'btn btn-light btn-floating',\n                      {\n                        'bg-success': likedChars?.some(likedChar => {\n                          return likedChar.id === char.id;\n                        }),\n                      },\n                    )}\n                  >\n                    <i className=\"fas fa-thumbs-up\"></i>\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      dispatch(setCurrentUserDislikedChars(char));\n                    }}\n                    className={classNames(\n                      'btn btn-light btn-floating',\n                      {\n                        'bg-danger': dislikedChars?.some(dislikedChar => {\n                          return dislikedChar.id === char.id;\n                        }),\n                      },\n                    )}\n                  >\n                    <i className=\"fas fa-thumbs-down\"></i>\n                  </button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <Pagination />\n    </>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  setCurrentUserDislikedChars,\n  setCurrentUserLikedChars,\n  selectors,\n  setCurrentChar,\n} from '../../store/CharsListReducer';\n\nimport './MyProfilePage.scss';\n\nexport const MyProfilePage: React.FC = memo(() => {\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const likedChars = useAppSelector(selectors.getLikedChars);\n  const dislikedChars = useAppSelector(selectors.getDislikedChars);\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex gap-3 flex-column flex-md-row\">\n        <div className=\"bg-dark favoriteList-container\">\n          <h2 className=\"text-light\">\n            Liked Chars List:\n          </h2>\n          {likedChars?.length ? (\n            <ul className=\"list-group list-group-light list-container clickable\">\n              {likedChars.map(char => (\n                <li\n                  key={char.id}\n                  className=\"\n                    bg-dark\n                    char\n                    list-group-item\n                    d-flex\n                    flex-md-row\n                    flex-column\n                    justify-space-between\n                    align-items-start\n                    align-items-md-center\n                    border-success\"\n                  onClick={() => {\n                    dispatch(setCurrentChar(null));\n                    navigate(`/list/${char.id}`);\n                  }}\n                >\n                  <div\n                    className=\"ms-2 me-2 mb-2 mb-md-0 d-flex justify-content-center align-items-center\"\n                    style={{ gap: '20px' }}\n                  >\n                    <img\n                      src={char.image}\n                      alt={`${char.name} poster`}\n                      className=\"img-fluid rounded shadow-3 char__image\"\n                    />\n\n                    <h3 className=\"fw-bold text-light\">\n                      {char.name}\n                    </h3>\n\n                    <p\n                      className={classNames(\n                        'badge rounded-pill badge-light',\n                        { 'text-success': char.status === 'Alive' },\n                        { 'text-danger': char.status === 'Dead' },\n                        { 'text-warning': char.status === 'unknown' },\n                      )}\n                    >\n                      {char.status}\n                    </p>\n                  </div>\n\n                  <div className=\"\n                    btn-group\n                    me-2\n                    ms-2\n                    d-flex\n                    justify-content-end\n                    align-items-center\"\n                  >\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserLikedChars(char));\n                      }}\n                      className={classNames(\n                        'btn btn-light btn-floating',\n                        {\n                          'bg-success': likedChars?.some(likedChar => {\n                            return likedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      <i className=\"fas fa-thumbs-up\"></i>\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserDislikedChars(char));\n                      }}\n                      className={classNames(\n                        'btn btn-light btn-floating',\n                        {\n                          'bg-danger': dislikedChars?.some(dislikedChar => {\n                            return dislikedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <i>No liked characters yet</i>\n          )}\n        </div>\n\n        <div className=\"bg-dark favoriteList-container\">\n          <h2 className=\"text-light\">\n            Disliked Chars List:\n          </h2>\n          {dislikedChars?.length ? (\n            <ul className=\"list-group list-group-light list-container clickable\">\n              {dislikedChars.map(char => (\n                <li\n                  key={char.id}\n                  className=\"\n                  bg-dark\n                  char\n                  list-group-item\n                  d-flex\n                  flex-md-row\n                  flex-column\n                  justify-space-between\n                  align-items-start\n                  align-items-md-center\n                  border-success\"\n                  onClick={() => {\n                    dispatch(setCurrentChar(null));\n                    navigate(`/list/${char.id}`);\n                  }}\n                >\n                  <div\n                    className=\"ms-2 me-2 mb-2 mb-md-0 d-flex justify-content-center align-items-center\"\n                    style={{ gap: '20px' }}\n                  >\n                    <img\n                      src={char.image}\n                      alt={`${char.name} poster`}\n                      className=\"img-fluid rounded shadow-3 char__image\"\n                    />\n\n                    <h3 className=\"fw-bold text-light\">\n                      {char.name}\n                    </h3>\n\n                    <p\n                      className={classNames(\n                        'badge rounded-pill badge-light',\n                        { 'text-success': char.status === 'Alive' },\n                        { 'text-danger': char.status === 'Dead' },\n                        { 'text-warning': char.status === 'unknown' },\n                      )}\n                    >\n                      {char.status}\n                    </p>\n                  </div>\n\n                  <div className=\"\n                  btn-group\n                  me-2\n                  ms-2\n                  d-flex\n                  justify-content-end\n                  align-items-center\"\n                  >\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserLikedChars(char));\n                      }}\n                      className={classNames(\n                        'btn btn-light btn-floating',\n                        {\n                          'bg-success': likedChars?.some(likedChar => {\n                            return likedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      <i className=\"fas fa-thumbs-up\"></i>\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserDislikedChars(char));\n                      }}\n                      className={classNames(\n                        'btn btn-light btn-floating',\n                        {\n                          'bg-danger': dislikedChars?.some(dislikedChar => {\n                            return dislikedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <i>No disliked characters yet</i>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/tabindex-no-positive */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  loadFilteredCharactersFromServer,\n  selectors,\n  setCurrentQuery,\n} from '../../store/CharsListReducer';\n\nimport styles from './Search.module.scss';\n\nexport const Search: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const nameQuery = useAppSelector(selectors.getNameQuery);\n  const filteredChars = useAppSelector(selectors.getFilteredCharacters);\n\n  const [userInput, setUserInput] = useState(nameQuery);\n  const [activeSuggestion, setActiveSuggestion] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const applyQuery = useCallback(\n    debounce(async (newQuery: string) => {\n      await dispatch(loadFilteredCharactersFromServer(newQuery));\n      dispatch(setCurrentQuery(newQuery));\n    }, 500),\n    [nameQuery],\n  );\n\n  const handleChange = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const currentInput = e.currentTarget.value;\n\n    setUserInput(currentInput);\n    applyQuery(currentInput);\n    setActiveSuggestion(0);\n    setShowSuggestions(true);\n  }, [nameQuery]);\n\n  const handleChoose = useCallback(() => {\n    setUserInput(filteredChars[activeSuggestion].name);\n    setShowSuggestions(false);\n    setActiveSuggestion(0);\n    navigate(`/list/${filteredChars[activeSuggestion].id}`);\n  }, [filteredChars, activeSuggestion]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.code === 'Enter') {\n      e.preventDefault();\n\n      setUserInput('');\n      setActiveSuggestion(0);\n      setShowSuggestions(false);\n\n      if (!filteredChars.length) {\n        return;\n      }\n\n      navigate(`/list/${filteredChars[activeSuggestion].id}`);\n    }\n\n    if (e.code === 'Tab') {\n      if (!filteredChars.length) {\n        return;\n      }\n\n      setUserInput(filteredChars[activeSuggestion].name);\n      setActiveSuggestion(0);\n      setShowSuggestions(false);\n    }\n\n    if (e.code === 'ArrowUp') {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      setActiveSuggestion((prevValue) => prevValue - 1);\n    }\n\n    if (e.code === 'ArrowDown') {\n      if (activeSuggestion + 1 === filteredChars.length) {\n        return;\n      }\n\n      setActiveSuggestion((prevValue) => prevValue + 1);\n    }\n  }, [activeSuggestion, filteredChars, nameQuery]);\n\n  const suggestionsListComponent = useMemo(() => {\n    if (showSuggestions && userInput) {\n      if (filteredChars.length) {\n        return (\n          <ul\n            className={classNames(\n              'list-group list-group-light my-dropdown',\n              styles.suggestionsList,\n            )}\n          >\n            {filteredChars.map((char, index) => {\n              return (\n                <li\n                  key={char.id}\n                  onClick={() => handleChoose()}\n                  onMouseEnter={() => {\n                    setActiveSuggestion(index);\n                  }}\n                  className={classNames(\n                    'list-group-item px-3 border-0',\n                    { 'bg-success': index === activeSuggestion },\n                  )}\n                >\n                  {char.name}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }\n\n      return (\n        <div\n          className={classNames(\n            'list-group list-group-light',\n            styles.suggestionsList,\n          )}\n        >\n          <p\n            className={classNames(\n              'list-group-item px-3 border-0',\n              styles.suggestionsList__item,\n            )}\n          >\n            Nothing...\n          </p>\n        </div>\n      );\n    }\n\n    return null;\n  }, [userInput, showSuggestions, activeSuggestion, filteredChars]);\n\n  return (\n    <form\n      className=\"input-group w-auto my-auto d-sm-flex\"\n    >\n      <input\n        type=\"text\"\n        value={userInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        autoComplete=\"off\"\n        className=\"form-control rounded\"\n        placeholder=\"Search\"\n        style={{ minWidth: '125px' }}\n      />\n      {suggestionsListComponent}\n      <button\n        type=\"button\"\n        onClick={handleChoose}\n        className=\"input-group-text border-0 d-flex\"\n        onKeyDown={(e) => {\n          if (e.code === 'Enter') {\n            e.preventDefault();\n\n            setUserInput('');\n            setActiveSuggestion(0);\n            setShowSuggestions(false);\n\n            if (!filteredChars.length) {\n              return;\n            }\n\n            navigate(`/list/${filteredChars[activeSuggestion].id}`);\n          }\n        }}\n      >\n        <i role=\"button\" className=\"fas fa-search myLink\"></i>\n      </button>\n    </form>\n  );\n});\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { memo, useCallback } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nimport './Header.scss';\n\nimport { FacebookResponse } from '../../types/FacebookResponse';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { selectors, setUser } from '../../store/CharsListReducer';\nimport { Search } from '../Search/Search';\n\nexport const Header: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(useLocation().search);\n  const user = useAppSelector(selectors.getUser);\n\n  const responseFacebook = useCallback((response: FacebookResponse) => {\n    try {\n      if (localStorage.getItem(response.userID) !== null) {\n        dispatch(setUser(JSON.parse(localStorage.getItem(response.userID) || 'null')));\n\n        return;\n      }\n\n      const userObject = {\n        name: response.name,\n        image: response.picture.data.url,\n        userID: response.userID,\n        likedChars: [],\n        dislikedChars: [],\n      };\n\n      localStorage.setItem(response.userID, JSON.stringify(userObject));\n      dispatch(setUser(userObject));\n      searchParams.delete('code');\n    } catch {\n      dispatch(setUser(null));\n    }\n  }, []);\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-lg bg-dark\">\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-mdb-toggle=\"collapse\"\n            data-mdb-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <i className=\"fas fa-bars text-light\"></i>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <a className=\"navbar-brand mt-2 mt-lg-0\" href=\"#\">\n              <img\n                src=\"https://www.freeiconspng.com/thumbs/rick-and-morty-folder-icon/rick-and-morty-icon-png-images-29.png\"\n                height=\"50\"\n                alt=\"MDB Logo\"\n                loading=\"lazy\"\n              />\n            </a>\n\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item active\">\n                <NavLink\n                  to=\"/\"\n                  className=\"nav-link myLink\"\n                >\n                  Characters List\n                </NavLink>\n              </li>\n            </ul>\n\n            <Search />\n          </div>\n\n          <div className=\"d-flex align-items-center\">\n            {user ? (\n              <div className=\"dropdown\">\n                <a\n                  href=\"#\"\n                  className=\"dropdown-toggle d-flex align-items-center hidden-arrow\"\n                  id=\"navbarDropdownMenuAvatar\"\n                  role=\"button\"\n                  data-mdb-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"nav-link ps-0 myLink\">\n                    {user.name}\n                  </div>\n\n                  <img\n                    className=\"rounded-circle nav-link\"\n                    height=\"50\"\n                    src={user.image}\n                    alt=\"My avatar\"\n                    loading=\"lazy\"\n                  />\n                </a>\n                <ul\n                  className=\"dropdown-menu dropdown-menu-start bg-dark\"\n                  aria-labelledby=\"navbarDropdownMenuAvatar\"\n                >\n                  <li>\n                    <NavLink\n                      to=\"/profile\"\n                      className=\"dropdown-item myLink btn\"\n                    >\n                      My profile\n                    </NavLink>\n                  </li>\n                  <li>\n                    <a\n                      className=\"dropdown-item btn btn-danger myLink\"\n                      href=\"#\"\n                      onClick={() => {\n                        dispatch(setUser(null));\n                        navigate('/list');\n                      }}\n                    >\n                      Logout\n                    </a>\n                  </li>\n                </ul>\n              </div>\n\n            ) : (\n              <div className=\"nav-link\">\n                <FacebookLogin\n                  appId=\"3056667237918240\"\n                  autoLoad\n                  fields=\"name,picture\"\n                  callback={responseFacebook}\n                  icon=\"fa-facebook\"\n                  textButton=\"LOGIN\"\n                  cssClass=\"facebook\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n});\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAppSelector } from '../../store';\nimport { selectors } from '../../store/CharsListReducer';\n\nexport const RequireAuth = ({ children }: { children: JSX.Element }) => {\n  const user = useAppSelector(selectors.getUser);\n\n  if (!user) {\n    return <Navigate to=\"/list\" replace />;\n  }\n\n  return children;\n};\n","import React, { memo } from 'react';\n\nexport const Footer: React.FC = memo(() => {\n  return (\n    <footer className=\"bg-dark text-center text-white\">\n      <div className=\"container pt-4\">\n        <section className=\"mb-4\">\n          <a\n            className=\"btn btn-floating btn-lg m-1 myLink\"\n            href=\"https://www.linkedin.com/in/maksym-yaremenko-a68530239/\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            role=\"button\"\n            data-mdb-ripple-color=\"dark\"\n          >\n            <i className=\"fab fa-linkedin-in\"></i>\n          </a>\n\n          <a\n            className=\"btn btn-floating btn-lg m-1 myLink\"\n            href=\"https://github.com/yaremenko-maksym\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            role=\"button\"\n            data-mdb-ripple-color=\"dark\"\n          >\n            <i className=\"fab fa-github\"></i>\n          </a>\n        </section>\n      </div>\n\n      <div className=\"text-center p-3 d-flex flex-column flex-md-row gap-3 justify-content-center align-items-center\">\n        {'Prodject by Yaremenko Maksym '}\n        <a\n          className=\"myLink btn\"\n          target=\"_blank\"\n          href=\"https://www.freeprivacypolicy.com/live/91818545-f675-46d1-861b-eb73bf20319a\"\n          rel=\"noreferrer\"\n        >\n          Privacy Policy\n        </a>\n      </div>\n    </footer>\n  );\n});\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { CharPage } from './components/CharPage';\nimport { CharsList } from './components/CharsList';\nimport { MyProfilePage } from './components/MyProfilePage';\nimport { Header } from './components/Header';\nimport { RequireAuth } from './components/RequireAuth';\nimport { Footer } from './components/Footer';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <main className=\"main\">\n        <Routes>\n          <Route path=\"/list\" element={<CharsList />} />\n          <Route path=\"/list/:charID\" element={<CharPage />} />\n          <Route\n            path=\"/profile\"\n            element={(\n              <RequireAuth>\n                <MyProfilePage />\n              </RequireAuth>\n            )}\n          />\n          <Route path=\"/\" element={<Navigate to=\"/list\" />} />\n          <Route path=\"*\" element={<Navigate to=\"/list\" />} />\n        </Routes>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport { App } from './App';\nimport { store } from './store';\n\nrender(\n  <HashRouter>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
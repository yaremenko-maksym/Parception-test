{"version":3,"sources":["components/ControlPanel/ControlPanel.module.scss","components/Header/Header.module.scss","components/GoBackButton/GoBack.module.scss","components/MyProfilePage/MyProfilePage.module.scss","api/api.ts","store/CharsListReducer.ts","store/index.ts","components/Loader/Loader.tsx","components/GoBackButton/GoBack.tsx","components/CharPage/CharPage.tsx","functions/URLValidator.ts","components/ControlPanel/ControlPanel.tsx","components/Pagination/Pagination.tsx","functions/paginate.ts","components/CharsList/CharsList.tsx","components/MyProfilePage/MyProfilePage.tsx","components/Header/Header.tsx","components/RequireAuth/RequireAuth.tsx","App.tsx","index.tsx","components/CharPage/CharPage.module.scss","components/CharsList/CharsList.module.scss"],"names":["module","exports","BASE_URL","getAllCharactersFromServer","page","a","fetch","response","json","getCharacterByIDFromServer","id","loadCharsFromServer","createAsyncThunk","loadCharByIDFromServer","CharsListReducer","createSlice","name","initialState","chars","currentChar","isListLoading","isCharPageLoading","nextPage","prevPage","user","pagesCount","totalChars","reducers","setCurrentChar","state","action","payload","setIsListLoading","setIsCharPageLoading","setUser","setCurrentUserLikedChars","likedChars","some","char","filter","localStorage","removeItem","userID","setItem","JSON","stringify","push","dislikedChars","setCurrentUserDislikedChars","setCurrentCharPhoto","image","extraReducers","builder","addCase","fulfilled","results","info","next","prev","pages","count","actions","selectors","rootReducer","combineReducers","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Loader","memo","size","className","classNames","GoBack","navigate","useNavigate","type","onClick","styles","goBack","CharPage","charID","useParams","dispatch","useState","isPhotoChangeInputVisible","setIsPhotoChangeInputVisible","isURLValid","setIsURLValid","newPhotoUrl","setNewPhotoUrl","currentCharDate","useMemo","date","Date","created","day","getDate","month","getMonth","year","getFullYear","handleNewImgUpload","useCallback","e","preventDefault","match","useEffect","container","card","card__title","src","alt","card__image","changePhoto","value","onChange","target","placeholder","changePhoto__input","changePhoto__error","event","changePhoto__button","card__species","species","card__gender","gender","card__location","href","location","url","card__locationLink","card__episodeList","episode","map","link","card__episodeListItem","card__episodeListItemLink","split","card__status","card__status__alive","status","card__status__dead","card__status__unknown","card__created","ControlPanel","activeSuggestion","setActiveSuggestion","filteredSuggestions","setFilteredSuggestions","showSuggestions","setShowSuggestions","userInput","setUserInput","handleChange","currentInput","currentTarget","filteredChars","toLowerCase","includes","handleKeyDown","code","prevValue","length","suggestionsListComponent","suggestionsList","index","active","suggestionsList__item","onMouseEnter","noMatch","fieldset","legend","htmlFor","label","onKeyDown","input","autoComplete","Pagination","searchParams","URLSearchParams","useLocation","search","currentPage","get","isPrevDisabled","setPrevDisability","isNextDisabled","setNextDisability","total","last","perPage","visiblePages","lastPage","result","i","Math","max","min","unshift","uuid","paginate","set","toString","disabled","item","CharsList","charsList","item__infoContainer","item__image","item__name","item__status","item__status__alive","item__status__dead","item__status__unknown","item__buttons","stopPropagation","item__button","item__buttonLike","item__buttonLikeActive","likedChar","item__buttonDislike","item__buttonDislikeActive","dislikedChar","MyProfilePage","wrapper","charsList__title","logOut","Header","header","to","avatar","appId","autoLoad","fields","callback","getItem","parse","userObject","picture","data","icon","textButton","cssClass","facebook","RequireAuth","children","replace","App","path","element","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94e6c9e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"ControlPanel_active__2Anc-\",\"container\":\"ControlPanel_container__3bTRN\",\"fieldset\":\"ControlPanel_fieldset__AV8Ko\",\"legend\":\"ControlPanel_legend__3BFn9\",\"label\":\"ControlPanel_label__FJn3S\",\"input\":\"ControlPanel_input__3xcxf\",\"noMatch\":\"ControlPanel_noMatch__28mjC\",\"suggestionsList\":\"ControlPanel_suggestionsList__10XjL\",\"suggestionsList__item\":\"ControlPanel_suggestionsList__item__vPGVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3M--Y\",\"link\":\"Header_link__3YmTS\",\"avatar\":\"Header_avatar__2JvJT\",\"name\":\"Header_name__HdVhp\",\"facebook\":\"Header_facebook__306e1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBack\":\"GoBack_goBack__37rcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"charsList\":\"MyProfilePage_charsList__2E5SY\",\"charsList__title\":\"MyProfilePage_charsList__title__1bUzU\",\"container\":\"MyProfilePage_container__2Nx1g\",\"title\":\"MyProfilePage_title__3Yt_h\",\"item\":\"MyProfilePage_item__3Nh8d\",\"item__infoContainer\":\"MyProfilePage_item__infoContainer__1TD_d\",\"item__image\":\"MyProfilePage_item__image__3G_FE\",\"item__name\":\"MyProfilePage_item__name__2Nhra\",\"item__status\":\"MyProfilePage_item__status__T8Dve\",\"item__status__alive\":\"MyProfilePage_item__status__alive__3bEmG\",\"item__status__dead\":\"MyProfilePage_item__status__dead__gWF0j\",\"item__status__unknown\":\"MyProfilePage_item__status__unknown__wa-Nf\",\"item__buttons\":\"MyProfilePage_item__buttons__1Se2D\",\"item__button\":\"MyProfilePage_item__button__1k5Nf\",\"item__buttonLike\":\"MyProfilePage_item__buttonLike__2FUnY\",\"item__buttonLikeActive\":\"MyProfilePage_item__buttonLikeActive__nxOGX\",\"item__buttonDislike\":\"MyProfilePage_item__buttonDislike__1FEAt\",\"item__buttonDislikeActive\":\"MyProfilePage_item__buttonDislikeActive__3z82d\",\"wrapper\":\"MyProfilePage_wrapper__1C-zV\",\"logOut\":\"MyProfilePage_logOut__2T6dL\"};","import { CharactersResponse } from '../types/CharactersResponse';\n\nexport const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const getAllCharactersFromServer = async (page: number): Promise<CharactersResponse> => {\n  const response = await fetch(`${BASE_URL}/character?page=${page}`);\n\n  return response.json();\n};\n\nexport const getCharacterByIDFromServer = async (id: number) => {\n  const response = await fetch(`${BASE_URL}/character/${id}`);\n\n  return response.json();\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getAllCharactersFromServer, getCharacterByIDFromServer } from '../api/api';\nimport { Character } from '../types/Character';\nimport { User } from '../types/User';\n\ninterface CharsListState {\n  chars: Character[],\n  currentChar: Character | null,\n  isListLoading: boolean,\n  isCharPageLoading: boolean,\n  nextPage: string | null,\n  prevPage: string | null,\n  user: User | null,\n  pagesCount: number,\n  totalChars: number,\n}\n\nconst initialState: CharsListState = {\n  chars: [],\n  currentChar: null,\n  isListLoading: false,\n  isCharPageLoading: false,\n  nextPage: null,\n  prevPage: null,\n  user: null,\n  pagesCount: 1,\n  totalChars: 0,\n};\n\nexport const loadCharsFromServer = createAsyncThunk(\n  'CharsList/loadChars',\n  async (page: number) => {\n    const response = await getAllCharactersFromServer(page);\n\n    return response;\n  },\n);\n\nexport const loadCharByIDFromServer = createAsyncThunk(\n  'CharsList/loadCharByID',\n  async (id: number) => {\n    const response = await getCharacterByIDFromServer(id);\n\n    return response;\n  },\n);\n\nconst CharsListReducer = createSlice({\n  name: 'CharsListReducer',\n  initialState,\n  reducers: {\n    setCurrentChar: (state, action: PayloadAction<Character | null>) => {\n      state.currentChar = action.payload;\n    },\n    setIsListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isListLoading = action.payload;\n    },\n    setIsCharPageLoading: (state, action: PayloadAction<boolean>) => {\n      state.isCharPageLoading = action.payload;\n    },\n    setUser: (state, action: PayloadAction<User | null>) => {\n      state.user = action.payload;\n    },\n    setCurrentUserLikedChars: (state, action: PayloadAction<Character>) => {\n      if (state.user) {\n        if (state.user.likedChars?.some(char => char.id === action.payload.id)) {\n          state.user.likedChars = state.user?.likedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.likedChars?.push(action.payload);\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user?.dislikedChars.some(char => char.id === action.payload.id)) {\n          state.user.dislikedChars = state.user?.dislikedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentUserDislikedChars: (state, action: PayloadAction<Character>) => {\n      if (state.user) {\n        if (state.user?.dislikedChars.some(char => char.id === action.payload.id)) {\n          state.user.dislikedChars = state.user?.dislikedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        } else {\n          state.user.dislikedChars?.push(action.payload);\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n\n        if (state.user?.likedChars.some(char => char.id === action.payload.id)) {\n          state.user.likedChars = state.user?.likedChars.filter(char => {\n            return char.id !== action.payload.id;\n          });\n          localStorage.removeItem(state.user.userID);\n          localStorage.setItem(state.user.userID, JSON.stringify(state.user));\n        }\n      }\n    },\n    setCurrentCharPhoto: (state, action: PayloadAction<string>) => {\n      if (state.currentChar) {\n        state.currentChar.image = action.payload;\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadCharsFromServer.fulfilled, (state, action) => {\n      state.chars = action.payload.results;\n      state.nextPage = action.payload.info.next;\n      state.prevPage = action.payload.info.prev;\n      state.pagesCount = action.payload.info.pages;\n      state.totalChars = action.payload.info.count;\n      state.isListLoading = false;\n    });\n    builder.addCase(loadCharByIDFromServer.fulfilled, (state, action) => {\n      state.currentChar = action.payload;\n      state.isCharPageLoading = false;\n    });\n  },\n});\n\nexport const {\n  setIsListLoading,\n  setIsCharPageLoading,\n  setCurrentChar,\n  setUser,\n  setCurrentUserLikedChars,\n  setCurrentUserDislikedChars,\n  setCurrentCharPhoto,\n} = CharsListReducer.actions;\n\nexport default CharsListReducer.reducer;\n\nexport const selectors = {\n  getChars: (state: RootState) => {\n    return state.CharsListReducer.chars;\n  },\n  getLikedChars: (state: RootState) => {\n    return state.CharsListReducer.user?.likedChars;\n  },\n  getDislikedChars: (state: RootState) => {\n    return state.CharsListReducer.user?.dislikedChars;\n  },\n  getCurrentChar: (state: RootState) => {\n    return state.CharsListReducer.currentChar;\n  },\n  getIsListLoading: (state: RootState) => {\n    return state.CharsListReducer.isListLoading;\n  },\n  getIsCharPageLoading: (state: RootState) => {\n    return state.CharsListReducer.isCharPageLoading;\n  },\n  getNextPage: (state: RootState) => {\n    return state.CharsListReducer.nextPage;\n  },\n  getPrevPage: (state: RootState) => {\n    return state.CharsListReducer.prevPage;\n  },\n  getUser: (state: RootState) => {\n    return state.CharsListReducer.user;\n  },\n  getTotalChars: (state: RootState) => {\n    return state.CharsListReducer.totalChars;\n  },\n  getPagesCount: (state: RootState) => {\n    return state.CharsListReducer.pagesCount;\n  },\n};\n","/* eslint-disable import/no-cycle */\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport CharsListReducer from './CharsListReducer';\n\nconst rootReducer = combineReducers({\n  CharsListReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nimport './Loader.scss';\n\ntype Props = {\n  size: 'small' | 'big';\n};\n\nexport const Loader: React.FC<Props> = memo(({\n  size,\n}) => (\n  <div className=\"Loader\">\n    <div className={classNames(\n      'Loader__content',\n      { 'Loader__content--small': size === 'small' },\n      { 'Loader__content--big': size === 'big' },\n    )}\n    />\n  </div>\n));\n","import React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport styles from './GoBack.module.scss';\n\nexport const GoBack: React.FC = memo(() => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => navigate(-1)}\n      className={styles.goBack}\n    >\n      Back\n    </button>\n  );\n});\n","import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  loadCharByIDFromServer,\n  selectors,\n  setCurrentCharPhoto,\n  setIsCharPageLoading,\n} from '../../store/CharsListReducer';\n\nimport { Loader } from '../Loader';\nimport { GoBack } from '../GoBackButton';\nimport { urlValidator } from '../../functions/URLValidator';\n\nimport styles from './CharPage.module.scss';\n\nexport const CharPage: React.FC = memo(() => {\n  const { charID } = useParams();\n\n  const dispatch = useAppDispatch();\n\n  const [isPhotoChangeInputVisible, setIsPhotoChangeInputVisible] = useState(false);\n  const [isURLValid, setIsURLValid] = useState(true);\n  const [newPhotoUrl, setNewPhotoUrl] = useState('');\n\n  const currentChar = useAppSelector(selectors.getCurrentChar);\n  const isCharPageLoading = useAppSelector(selectors.getIsCharPageLoading);\n  const user = useAppSelector(selectors.getUser);\n\n  const currentCharDate = useMemo(() => {\n    if (currentChar) {\n      const date = new Date(currentChar.created);\n\n      return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n      };\n    }\n\n    return null;\n  }, [currentChar]);\n\n  const handleNewImgUpload = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    if (!urlValidator(newPhotoUrl)) {\n      setIsURLValid(false);\n\n      return;\n    }\n\n    setIsURLValid(true);\n    setIsPhotoChangeInputVisible(false);\n    dispatch(setCurrentCharPhoto(newPhotoUrl));\n  }, []);\n\n  useEffect(() => {\n    if (charID) {\n      dispatch(setIsCharPageLoading(true));\n      dispatch(loadCharByIDFromServer(+charID));\n    }\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <GoBack />\n\n      {isCharPageLoading && <Loader size=\"big\" />}\n\n      {currentChar && (\n        <div className={styles.card}>\n          <h2 className={styles.card__title}>\n            {currentChar.name}\n          </h2>\n\n          <img\n            src={currentChar.image}\n            alt={`${currentChar.name} poster`}\n            className={styles.card__image}\n          />\n\n          {user && (\n            <div className={styles.changePhoto}>\n              {isPhotoChangeInputVisible ? (\n                <>\n                  <input\n                    type=\"text\"\n                    value={newPhotoUrl}\n                    onChange={({ target }) => {\n                      setIsURLValid(true);\n                      setNewPhotoUrl(target.value);\n                    }}\n                    placeholder=\"Image URL...\"\n                    className={styles.changePhoto__input}\n                  />\n\n                  {!isURLValid && (\n                    <p className={styles.changePhoto__error}>*Invalid url</p>\n                  )}\n\n                  <button\n                    type=\"submit\"\n                    onClick={(event) => {\n                      handleNewImgUpload(event);\n                    }}\n                    className={styles.changePhoto__button}\n                  >\n                    Apply Change\n                  </button>\n                </>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={() => setIsPhotoChangeInputVisible(true)}\n                  className={styles.changePhoto__button}\n                >\n                  Change Photo\n                </button>\n              )}\n            </div>\n          )}\n\n          <p className={styles.card__species}>\n            {currentChar.species}\n          </p>\n\n          <p className={styles.card__gender}>\n            {currentChar.gender}\n          </p>\n\n          <p className={styles.card__location}>\n            {'Location: '}\n            <a\n              href={currentChar.location.url}\n              className={styles.card__locationLink}\n            >\n              {currentChar.location.name}\n            </a>\n          </p>\n\n          <ul className={styles.card__episodeList}>\n            {'Episodes: '}\n            {currentChar.episode.map(link => (\n              <li\n                key={link}\n                className={styles.card__episodeListItem}\n              >\n                <a href={link} className={styles.card__episodeListItemLink}>\n                  {link.split('/')[5]}\n                </a>\n              </li>\n            ))}\n          </ul>\n\n          <p\n            className={classNames(\n              styles.card__status,\n              { [styles.card__status__alive]: currentChar.status === 'Alive' },\n              { [styles.card__status__dead]: currentChar.status === 'Dead' },\n              { [styles.card__status__unknown]: currentChar.status === 'unknown' },\n            )}\n          >\n            {currentChar.status}\n          </p>\n\n          <p className={styles.card__created}>\n            {`Created date: ${currentCharDate?.day}.${currentCharDate?.month}.${currentCharDate?.year}`}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n});\n","export function urlValidator(str: string) {\n  const validUrlRegex = /^https?:\\/\\/.*\\/.*\\.(png|gif|webp|jpeg|jpg)\\??.*$/gmi;\n\n  return str.match(validUrlRegex);\n}\n","import React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport styles from './ControlPanel.module.scss';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { selectors, setCurrentChar } from '../../store/CharsListReducer';\nimport { Character } from '../../types/Character';\n\nexport const ControlPanel: React.FC = memo(() => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const chars = useAppSelector(selectors.getChars);\n\n  const [activeSuggestion, setActiveSuggestion] = useState(0);\n  const [filteredSuggestions, setFilteredSuggestions] = useState<Character[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [userInput, setUserInput] = useState('');\n\n  const handleChange = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const currentInput = e.currentTarget.value;\n\n    const filteredChars = chars.filter(char => {\n      return char.name.toLowerCase().includes(currentInput.toLowerCase());\n    });\n\n    setActiveSuggestion(0);\n    setFilteredSuggestions(filteredChars);\n    setShowSuggestions(true);\n    setUserInput(currentInput);\n  }, [userInput, chars]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.code === 'Enter') {\n      setUserInput(filteredSuggestions[activeSuggestion].name);\n      setActiveSuggestion(0);\n      setShowSuggestions(false);\n      dispatch(setCurrentChar(null));\n      navigate(`/${filteredSuggestions[activeSuggestion].id}`);\n    }\n\n    if (e.code === 'Tab') {\n      setUserInput(filteredSuggestions[activeSuggestion].name);\n      setActiveSuggestion(0);\n      setShowSuggestions(false);\n    }\n\n    if (e.code === 'ArrowUp') {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      setActiveSuggestion((prevValue) => prevValue - 1);\n    }\n\n    if (e.code === 'ArrowDown') {\n      if (activeSuggestion + 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      setActiveSuggestion((prevValue) => prevValue + 1);\n    }\n  }, [activeSuggestion, filteredSuggestions]);\n\n  const suggestionsListComponent = useMemo(() => {\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        return (\n          <ul className={styles.suggestionsList}>\n            {filteredSuggestions.map((char, index) => {\n              return (\n                <li\n                  key={char.id}\n                >\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      navigate(`/${char.id}`);\n                    }}\n                    className={classNames(\n                      { [styles.active]: index === activeSuggestion },\n                      styles.suggestionsList__item,\n                    )}\n                    onMouseEnter={() => {\n                      setActiveSuggestion(index);\n                    }}\n                  >\n                    {char.name}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }\n\n      return (\n        <div className={styles.noMatch}>\n          <p>No suggestions, you&apos;re on your own!</p>\n        </div>\n      );\n    }\n\n    return null;\n  }, [userInput, showSuggestions, activeSuggestion, filteredSuggestions]);\n\n  return (\n    <div className={styles.container}>\n      <fieldset className={styles.fieldset}>\n        <legend className={styles.legend}>\n          Filter\n        </legend>\n\n        <label\n          htmlFor=\"titleQuery\"\n          className={styles.label}\n        >\n          <input\n            type=\"text\"\n            id=\"titleQuery\"\n            value={userInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            className={styles.input}\n            placeholder=\"Name...\"\n            autoComplete=\"off\"\n          />\n          {suggestionsListComponent}\n        </label>\n      </fieldset>\n    </div>\n  );\n});\n","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\n\nimport { paginate } from '../../functions/paginate';\n\nimport './Pagination.scss';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nimport {\n  loadCharsFromServer,\n  selectors,\n} from '../../store/CharsListReducer';\n\nexport const Pagination: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(useLocation().search);\n  const currentPage = searchParams.get('page') || 1;\n\n  const [isPrevDisabled, setPrevDisability] = useState(true);\n  const [isNextDisabled, setNextDisability] = useState(false);\n\n  const total = useAppSelector(selectors.getTotalChars);\n  const last = useAppSelector(selectors.getPagesCount);\n  const perPage = useMemo(() => 20, []);\n\n  const visiblePages = useMemo(() => {\n    return paginate(+currentPage, last);\n  }, [currentPage, total, perPage]);\n\n  useEffect(() => {\n    if (+currentPage === visiblePages[visiblePages.length - 1].value) {\n      setNextDisability(true);\n    } else {\n      setNextDisability(false);\n    }\n\n    if (+currentPage > 1) {\n      setPrevDisability(false);\n    } else {\n      setPrevDisability(true);\n    }\n\n    dispatch(loadCharsFromServer(+currentPage));\n  }, [currentPage, total]);\n\n  return (\n    <div className=\"pagination\">\n      {/* <p className=\"pagination__title\">\n        {`${firstElementOnPage} - ${lastElementOnPage} of ${total}`}\n      </p> */}\n\n      <div className=\"pagination__buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            searchParams.set('page', (+currentPage - 1).toString());\n            navigate(`?page=${(+currentPage - 1).toString()}`);\n          }}\n          disabled={isPrevDisabled}\n          className=\"pagination__button\"\n        >\n          &laquo;\n        </button>\n\n        <div className=\"pagination__buttons-pages\">\n          {visiblePages.map(item => {\n            if (item.value === '...') {\n              return (\n                <p\n                  key={item.id}\n                  className=\"pagination__buttons-dots\"\n                >\n                  {item.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                key={item.id}\n                type=\"button\"\n                onClick={() => {\n                  searchParams.set('page', item.value.toString());\n                  navigate(`?page=${item.value}`);\n                }}\n                className={classNames(\n                  'pagination__button',\n                  { 'pagination__button--selected': +currentPage === item.value },\n                )}\n              >\n                {item.value}\n              </button>\n            );\n          })}\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            searchParams.set('page', (+currentPage + 1).toString());\n            navigate(`?page=${(+currentPage + 1).toString()}`);\n          }}\n          disabled={isNextDisabled}\n          className=\"pagination__button\"\n        >\n          &raquo;\n        </button>\n      </div>\n    </div>\n  );\n});\n","import { v4 as uuid } from 'uuid';\n\nexport const paginate = (currentPage: number, lastPage: number) => {\n  const delta = 2;\n  const result = [];\n\n  for (\n    let i = Math.max(2, (currentPage - delta));\n    i <= Math.min((lastPage - 1), (currentPage + delta));\n    i += 1\n  ) {\n    result.push(i);\n  }\n\n  if ((currentPage - delta) > 2) {\n    result.unshift('...');\n  }\n\n  if ((currentPage + delta) < (lastPage - 1)) {\n    result.push('...');\n  }\n\n  result.unshift(1);\n  if (lastPage !== 1) {\n    result.push(lastPage);\n  }\n\n  return result.map(value => ({\n    value,\n    id: uuid(),\n  }));\n};\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, memo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nimport {\n  setCurrentUserDislikedChars,\n  setCurrentUserLikedChars,\n  loadCharsFromServer,\n  selectors,\n  setCurrentChar,\n  setIsListLoading,\n} from '../../store/CharsListReducer';\nimport { Loader } from '../Loader';\nimport { ControlPanel } from '../ControlPanel';\nimport { Pagination } from '../Pagination';\n\nimport styles from './CharsList.module.scss';\n\nexport const CharsList: React.FC = memo(() => {\n  const navigate = useNavigate();\n\n  const searchParams = new URLSearchParams(useLocation().search);\n  const page = searchParams.get('page') || 1;\n\n  const dispatch = useAppDispatch();\n  const chars = useAppSelector(selectors.getChars);\n  const likedChars = useAppSelector(selectors.getLikedChars);\n  const dislikedChars = useAppSelector(selectors.getDislikedChars);\n  const isListLoading = useAppSelector(selectors.getIsListLoading);\n  const user = useAppSelector(selectors.getUser);\n\n  useEffect(() => {\n    dispatch(setIsListLoading(true));\n    dispatch(loadCharsFromServer(+page));\n  }, []);\n\n  return (\n    <>\n      <ControlPanel />\n\n      <div className={styles.container}>\n        <ul className={styles.charsList}>\n          {isListLoading && <Loader size=\"big\" />}\n          {chars.map(char => (\n            <li\n              key={char.id}\n              className={styles.item}\n              onClick={() => {\n                dispatch(setCurrentChar(null));\n                navigate(`/list/${char.id}`);\n              }}\n            >\n              <div className={styles.item__infoContainer}>\n                <img\n                  src={char.image}\n                  alt={`${char.name} poster`}\n                  className={styles.item__image}\n                />\n\n                <h3 className={styles.item__name}>\n                  {char.name}\n                </h3>\n\n                <p\n                  className={classNames(\n                    styles.item__status,\n                    { [styles.item__status__alive]: char.status === 'Alive' },\n                    { [styles.item__status__dead]: char.status === 'Dead' },\n                    { [styles.item__status__unknown]: char.status === 'unknown' },\n                  )}\n                >\n                  {char.status}\n                </p>\n              </div>\n\n              {user && (\n                <div className={styles.item__buttons}>\n                  <button\n                    type=\"button\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      dispatch(setCurrentUserLikedChars(char));\n                    }}\n                    className={classNames(\n                      styles.item__button,\n                      styles.item__buttonLike,\n                      {\n                        [styles.item__buttonLikeActive]: likedChars?.some(likedChar => {\n                          return likedChar.id === char.id;\n                        }),\n                      },\n                    )}\n                  >\n                    Like\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      dispatch(setCurrentUserDislikedChars(char));\n                    }}\n                    className={classNames(\n                      styles.item__button,\n                      styles.item__buttonDislike,\n                      {\n                        [styles.item__buttonDislikeActive]: dislikedChars?.some(dislikedChar => {\n                          return dislikedChar.id === char.id;\n                        }),\n                      },\n                    )}\n                  >\n                    Dislike\n                  </button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <Pagination />\n    </>\n  );\n});\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  setCurrentUserDislikedChars,\n  setCurrentUserLikedChars,\n  selectors,\n  setCurrentChar,\n  setUser,\n} from '../../store/CharsListReducer';\nimport { GoBack } from '../GoBackButton';\n\nimport styles from './MyProfilePage.module.scss';\n\nexport const MyProfilePage: React.FC = memo(() => {\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const likedChars = useAppSelector(selectors.getLikedChars);\n  const dislikedChars = useAppSelector(selectors.getDislikedChars);\n\n  return (\n    <>\n      <GoBack />\n\n      <div className={styles.wrapper}>\n\n        <div className={styles.container}>\n          <h2 className={styles.charsList__title}>\n            Liked Chars List:\n          </h2>\n          {likedChars?.length ? (\n            <ul className={styles.charsList}>\n              {likedChars.map(char => (\n                <li\n                  key={char.id}\n                  className={styles.item}\n                  onClick={() => {\n                    dispatch(setCurrentChar(null));\n                    navigate(`/list/${char.id}`);\n                  }}\n                >\n                  <div className={styles.item__infoContainer}>\n                    <img\n                      src={char.image}\n                      alt={`${char.name} poster`}\n                      className={styles.item__image}\n                    />\n\n                    <h3 className={styles.item__name}>\n                      {char.name}\n                    </h3>\n\n                    <p\n                      className={classNames(\n                        styles.item__status,\n                        { [styles.item__status__alive]: char.status === 'Alive' },\n                        { [styles.item__status__dead]: char.status === 'Dead' },\n                        { [styles.item__status__unknown]: char.status === 'unknown' },\n                      )}\n                    >\n                      {char.status}\n                    </p>\n                  </div>\n\n                  <div className={styles.item__buttons}>\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserLikedChars(char));\n                      }}\n                      className={classNames(\n                        styles.item__button,\n                        styles.item__buttonLike,\n                        {\n                          [styles.item__buttonLikeActive]: likedChars.some(likedChar => {\n                            return likedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      Like\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserDislikedChars(char));\n                      }}\n                      className={classNames(\n                        styles.item__button,\n                        styles.item__buttonDislike,\n                        {\n                          [styles.item__buttonDislikeActive]: dislikedChars?.some(dislikedChar => {\n                            return dislikedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      Dislike\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <i>No liked characters yet</i>\n          )}\n\n        </div>\n\n        <div className={styles.container}>\n          <h2 className={styles.charsList__title}>\n            Disliked Chars List:\n          </h2>\n          {dislikedChars?.length ? (\n            <ul className={styles.charsList}>\n              {dislikedChars.map(char => (\n                <li\n                  key={char.id}\n                  className={styles.item}\n                  onClick={() => {\n                    dispatch(setCurrentChar(null));\n                    navigate(`/list/${char.id}`);\n                  }}\n                >\n                  <div className={styles.item__infoContainer}>\n                    <img\n                      src={char.image}\n                      alt={`${char.name} poster`}\n                      className={styles.item__image}\n                    />\n\n                    <h3 className={styles.item__name}>\n                      {char.name}\n                    </h3>\n\n                    <p\n                      className={classNames(\n                        styles.item__status,\n                        { [styles.item__status__alive]: char.status === 'Alive' },\n                        { [styles.item__status__dead]: char.status === 'Dead' },\n                        { [styles.item__status__unknown]: char.status === 'unknown' },\n                      )}\n                    >\n                      {char.status}\n                    </p>\n                  </div>\n\n                  <div className={styles.item__buttons}>\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserLikedChars(char));\n                      }}\n                      className={classNames(\n                        styles.item__button,\n                        styles.item__buttonLike,\n                        {\n                          [styles.item__buttonLikeActive]: likedChars?.some(likedChar => {\n                            return likedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      Like\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        dispatch(setCurrentUserDislikedChars(char));\n                      }}\n                      className={classNames(\n                        styles.item__button,\n                        styles.item__buttonDislike,\n                        {\n                          [styles.item__buttonDislikeActive]: dislikedChars.some(dislikedChar => {\n                            return dislikedChar.id === char.id;\n                          }),\n                        },\n                      )}\n                    >\n                      Dislike\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <i>No disliked characters yet</i>\n          )}\n        </div>\n\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch(setUser(null));\n          navigate('/list');\n        }}\n        className={styles.logOut}\n      >\n        Log Out\n      </button>\n    </>\n  );\n});\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nimport styles from './Header.module.scss';\n\nimport { FacebookResponse } from '../../types/FacebookResponse';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { selectors, setUser } from '../../store/CharsListReducer';\n\nexport const Header: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const user = useAppSelector(selectors.getUser);\n\n  const responseFacebook = (response: FacebookResponse) => {\n    try {\n      if (localStorage.getItem(response.userID) !== null) {\n        dispatch(setUser(JSON.parse(localStorage.getItem(response.userID) || 'null')));\n\n        return;\n      }\n\n      const userObject = {\n        name: response.name,\n        image: response.picture.data.url,\n        userID: response.userID,\n        likedChars: [],\n        dislikedChars: [],\n      };\n\n      localStorage.setItem(response.userID, JSON.stringify(userObject));\n      dispatch(setUser(userObject));\n    } catch {\n      dispatch(setUser(null));\n    }\n  };\n\n  return (\n    <header className={styles.header}>\n      <NavLink\n        to=\"/\"\n        className={styles.link}\n      >\n        Characters List\n      </NavLink>\n\n      {user ? (\n        <NavLink\n          to=\"/profile\"\n          className={styles.link}\n        >\n          <img\n            className={styles.avatar}\n            src={user.image}\n            alt=\"My avatar\"\n          />\n          <p className={styles.name}>\n            {user.name}\n          </p>\n        </NavLink>\n      ) : (\n        <>\n          <FacebookLogin\n            appId=\"3056667237918240\"\n            autoLoad={false}\n            fields=\"name,picture\"\n            callback={responseFacebook}\n            icon=\"fa-facebook\"\n            textButton=\"LOGIN\"\n            cssClass={styles.facebook}\n          />\n        </>\n      )}\n    </header>\n  );\n});\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAppSelector } from '../../store';\nimport { selectors } from '../../store/CharsListReducer';\n\nexport const RequireAuth = ({ children }: { children: JSX.Element }) => {\n  const user = useAppSelector(selectors.getUser);\n\n  if (!user) {\n    return <Navigate to=\"/list\" replace />;\n  }\n\n  return children;\n};\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { CharPage } from './components/CharPage';\nimport { CharsList } from './components/CharsList';\nimport { MyProfilePage } from './components/MyProfilePage';\nimport { Header } from './components/Header';\nimport { RequireAuth } from './components/RequireAuth';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Routes>\n        <Route path=\"/list\" element={<CharsList />} />\n        <Route path=\"/list/:charID\" element={<CharPage />} />\n        <Route\n          path=\"/profile\"\n          element={(\n            <RequireAuth>\n              <MyProfilePage />\n            </RequireAuth>\n          )}\n        />\n        <Route path=\"/\" element={<Navigate to=\"/list\" />} />\n        <Route path=\"*\" element={<Navigate to=\"/list\" />} />\n      </Routes>\n    </div>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport { App } from './App';\nimport { store } from './store';\n\nrender(\n  <HashRouter>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CharPage_container__1o70j\",\"card\":\"CharPage_card__2GJor\",\"card__title\":\"CharPage_card__title__369bB\",\"card__image\":\"CharPage_card__image__1px1_\",\"card__species\":\"CharPage_card__species__2ND66\",\"card__gender\":\"CharPage_card__gender__36F8d\",\"card__location\":\"CharPage_card__location__lU6Iv\",\"card__locationLink\":\"CharPage_card__locationLink__d4kPK\",\"card__episodeList\":\"CharPage_card__episodeList__2p0rM\",\"card__episodeListItem\":\"CharPage_card__episodeListItem__1i7Ds\",\"card__episodeListItemLink\":\"CharPage_card__episodeListItemLink__2_w33\",\"card__status\":\"CharPage_card__status__2x2zp\",\"card__status__alive\":\"CharPage_card__status__alive__2O7Ki\",\"card__status__dead\":\"CharPage_card__status__dead__2OyOh\",\"card__status__unknown\":\"CharPage_card__status__unknown__2dNlr\",\"card__created\":\"CharPage_card__created__2Hpie\",\"changePhoto\":\"CharPage_changePhoto__3nTgg\",\"changePhoto__input\":\"CharPage_changePhoto__input__nE17I\",\"changePhoto__error\":\"CharPage_changePhoto__error__2sYJc\",\"changePhoto__button\":\"CharPage_changePhoto__button__2sv2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"charsList\":\"CharsList_charsList__1qHta\",\"container\":\"CharsList_container__3mAkm\",\"title\":\"CharsList_title__2p9-4\",\"item\":\"CharsList_item__2ZC4I\",\"item__infoContainer\":\"CharsList_item__infoContainer__MhKYE\",\"item__image\":\"CharsList_item__image__1ybS6\",\"item__name\":\"CharsList_item__name__3vXEn\",\"item__status\":\"CharsList_item__status__2iCGb\",\"item__status__alive\":\"CharsList_item__status__alive__3trgT\",\"item__status__dead\":\"CharsList_item__status__dead__1UUP2\",\"item__status__unknown\":\"CharsList_item__status__unknown__3EG7g\",\"item__buttons\":\"CharsList_item__buttons__3cLlq\",\"item__button\":\"CharsList_item__button__3KVqb\",\"item__buttonLike\":\"CharsList_item__buttonLike__3OBNX\",\"item__buttonLikeActive\":\"CharsList_item__buttonLikeActive__2aIqJ\",\"item__buttonDislike\":\"CharsList_item__buttonDislike__3IhaW\",\"item__buttonDislikeActive\":\"CharsList_item__buttonDislikeActive__1HBTN\"};"],"sourceRoot":""}